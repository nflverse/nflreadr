[{"path":[]},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team hello@dynastyprocess.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Many hands make light work! ways can contribute project:","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"open-an-issue","dir":"","previous_headings":"","what":"Open an issue","title":"Contributing","text":"can open issue ’d like request specific function report bug/error.","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). can also bring changes nflverse discord team happy discuss!","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code style","title":"Contributing","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note usethis project released Contributor Code Conduct. contributing project agree abide terms. contribution guidelines inspired guidelines {usethis}","code":""},{"path":"https://nflreadr.nflverse.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 nflreadr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nflreadr.nflverse.com/articles/exporting_nflreadr.html","id":"re-exporting-nflreadr-functions","dir":"Articles","previous_headings":"","what":"Re-exporting nflreadr functions","title":"Using nflreadr in packages","text":"can re-export nflreadr functions package using following roxygen template:","code":"#' @inherit nflreadr::load_nextgen_stats #' @export # Need to add own examples if the function name is different #' @examples #' load_ng_stats(2020) load_ng_stats <- nflreadr::load_nextgen_stats"},{"path":"https://nflreadr.nflverse.com/articles/exporting_nflreadr.html","id":"using-progressr-with-from_url-functions","dir":"Articles","previous_headings":"","what":"Using progressr with from_url functions","title":"Using nflreadr in packages","text":"from_url family functions can adapted progressively() function decorator signal progress. ’s example, adapted load_rosters() source code: cause p() execute rds_from_url call, effectively “signalling” progress. order receive progress updates, user must wrap function (load_rosters, case) progressr::with_progress() shown : information, please see progressr documentation.","code":"load_rosters <- function(seasons = 1999:2020){    # Create a progressor function inside your function that knows how many \"steps\" there will be   p <- progressr::progressor(steps = length(seasons))     # Form the URLs to pass into rds_from_url   urls <- paste0(     \"https://github.com/nflverse/nflverse-rosters/\",     \"raw/master/data/seasons/roster_\",     seasons,      \".rds\")    # Use `progressively()` to wrap the existing function rds_from_url and    # call the `p()` progressor function as a signal immediately after each iteration      out <- purrr::map_dfr(urls, progressively(rds_from_url,p))      return(out) } progressr::with_progress(load_rosters(2010:2020))"},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"automation-status","dir":"Articles","previous_headings":"","what":"Automation Status","title":"nflverse Data Update and Availability Schedule","text":"following table reports status last update times nflverse data pipelines.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"nflverse-play-by-play-data","dir":"Articles","previous_headings":"","what":"nflverse Play-by-Play Data","title":"nflverse Data Update and Availability Schedule","text":"three ways obtain nflverse pbp data. recommend using nflreadr::load_pbp() nflfastR::load_pbp() primary method retrieving pbp data. uses automated data infrastructure download clean data, update nightly basis game day (additionally specific points game days) season. quick enough, nflfastR::build_nflfastR_pbp() parses raw pbp json files save, usually available within 15 minutes game ended. SQL database, nflfastR::update_db() helps maintain pbp database. uses nflfastR::build_nflfastR_pbp() can run schedule (.e. within 15 minutes game ended). cases, recommended update data night Wednesday Thursday order also receive stat corrections NFL incorporate Monday Wednesday latest. -> Thursday’s load_pbp() cleanest data .","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"nflverse-player-level-weekly-stats","dir":"Articles","previous_headings":"","what":"nflverse Player Level Weekly Stats","title":"nflverse Data Update and Availability Schedule","text":"Weekly player stats (offense, defense, kicking) computed using nflfastR::calculate_player_stats(), nflfastR::calculate_player_stats_def(), nflfastR::calculate_player_stats_kicking() date nflverse pbp data. player stats update every night (range 3 - 5 ET) season.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"nflverse-ftn-charting-data","dir":"Articles","previous_headings":"","what":"nflverse-FTN Charting Data","title":"nflverse Data Update and Availability Schedule","text":"ftn charting data updates every day 0, 6, 12, 18 UTC season. actual availability new data depends update schedule FTN.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"nflverse-participation-data","dir":"Articles","previous_headings":"","what":"nflverse Participation Data","title":"nflverse Data Update and Availability Schedule","text":"Participation data computed using unpublished code. data source gone won’t updates anymore.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"nflverse-gameschedule-data","dir":"Articles","previous_headings":"","what":"nflverse Game/Schedule Data","title":"nflverse Data Update and Availability Schedule","text":"Game/Schedule data updates 5 minutes season.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"nflverse-roster-data","dir":"Articles","previous_headings":"","what":"nflverse Roster Data","title":"nflverse Data Update and Availability Schedule","text":"Roster data updates every day 7AM UTC.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"player-level-weekly-nfl-next-gen-stats","dir":"Articles","previous_headings":"","what":"Player Level Weekly NFL Next Gen Stats","title":"nflverse Data Update and Availability Schedule","text":"Player level weekly stats provided NFL Next Gen Stats update every night (range 3 - 5 ET) season. actual availability new data depends update schedule NGS.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"pfr-snap-count-data","dir":"Articles","previous_headings":"","what":"PFR Snap Count Data","title":"nflverse Data Update and Availability Schedule","text":"Snap Count data updates every day 0, 6, 12, 18 UTC season. actual availability new data depends update schedule PFR.","code":""},{"path":"https://nflreadr.nflverse.com/articles/nflverse_data_schedule.html","id":"pfr-advanced-stats","dir":"Articles","previous_headings":"","what":"PFR Advanced Stats","title":"nflverse Data Update and Availability Schedule","text":"PFR Advanced Stats updates every day 7AM UTC season. actual availability new data depends update schedule PFR.","code":""},{"path":"https://nflreadr.nflverse.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tan Ho. Author, maintainer, copyright holder. Sebastian Carl. Author. John Edwards. Contributor. Ben Baldwin. Contributor. Thomas Mock. Contributor. Lee Sharpe. Contributor. Pranav Rajaram. Contributor.","code":""},{"path":"https://nflreadr.nflverse.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ho T, Carl S (2025). nflreadr: Download 'nflverse' Data. R package version 1.4.1.11, https://nflreadr.nflverse.com.","code":"@Manual{,   title = {nflreadr: Download 'nflverse' Data},   author = {Tan Ho and Sebastian Carl},   year = {2025},   note = {R package version 1.4.1.11},   url = {https://nflreadr.nflverse.com}, }"},{"path":"https://nflreadr.nflverse.com/index.html","id":"nflreadr-","dir":"","previous_headings":"","what":"nflreadr • Download nflverse Data","title":"nflreadr • Download nflverse Data","text":"nflreadr minimal package downloading data nflverse repositories. includes caching, optional progress updates, data dictionaries. Please note nflverse data repositories reorganized pushed towards nflverse-data repo, v1.2.0+ minimum version supports change. encourage users upgrade version immediately. Python access nflverse data, please check nfl-data-py - maintained Cooper Adams.","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"nflreadr • Download nflverse Data","text":"Install stable version CRAN : Install development version GitHub :","code":"install.packages(\"nflreadr\") install.packages(\"nflreadr\", repos = c(\"https://nflverse.r-universe.dev\", getOption(\"repos\")))  # or use remotes/devtools # install.packages(\"remotes\") remotes::install_github(\"nflverse/nflreadr\")"},{"path":"https://nflreadr.nflverse.com/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"nflreadr • Download nflverse Data","text":"main functions nflreadr prefixed load_.","code":"library(nflreadr)  load_pbp(2021) #> ── nflverse play by play data ────────────────────────────────────────────────── #> ℹ Data updated: 2022-09-27 04:35:02 PDT #> # A tibble: 50,712 × 372 #>    play_id game_id     old_game_id home_team away_team season_type  week posteam #>      <dbl> <chr>       <chr>       <chr>     <chr>     <chr>       <int> <chr>   #>  1       1 2021_01_AR… 2021091207  TEN       ARI       REG             1 <NA>    #>  2      40 2021_01_AR… 2021091207  TEN       ARI       REG             1 TEN     #>  3      55 2021_01_AR… 2021091207  TEN       ARI       REG             1 TEN     #>  4      76 2021_01_AR… 2021091207  TEN       ARI       REG             1 TEN     #>  5     100 2021_01_AR… 2021091207  TEN       ARI       REG             1 TEN     #>  6     122 2021_01_AR… 2021091207  TEN       ARI       REG             1 TEN     #>  7     152 2021_01_AR… 2021091207  TEN       ARI       REG             1 ARI     #>  8     181 2021_01_AR… 2021091207  TEN       ARI       REG             1 ARI     #>  9     218 2021_01_AR… 2021091207  TEN       ARI       REG             1 ARI     #> 10     253 2021_01_AR… 2021091207  TEN       ARI       REG             1 ARI     #> # ℹ 50,702 more rows #> # ℹ 364 more variables: posteam_type <chr>, defteam <chr>, side_of_field <chr>, #> #   yardline_100 <dbl>, game_date <chr>, quarter_seconds_remaining <dbl>, #> #   half_seconds_remaining <dbl>, game_seconds_remaining <dbl>, #> #   game_half <chr>, quarter_end <dbl>, …  load_player_stats(2021) #> ── nflverse player stats: offense ────────────────────────────────────────────── #> ℹ Data updated: 2023-02-28 01:26:47 PST #> # A tibble: 5,698 × 52 #>    player_id  player_name player_display_name position position_group #>    <chr>      <chr>       <chr>               <chr>    <chr>          #>  1 00-0019596 T.Brady     Tom Brady           QB       QB             #>  2 00-0019596 T.Brady     Tom Brady           QB       QB             #>  3 00-0019596 T.Brady     Tom Brady           QB       QB             #>  4 00-0019596 T.Brady     Tom Brady           QB       QB             #>  5 00-0019596 T.Brady     Tom Brady           QB       QB             #>  6 00-0019596 T.Brady     Tom Brady           QB       QB             #>  7 00-0019596 T.Brady     Tom Brady           QB       QB             #>  8 00-0019596 T.Brady     Tom Brady           QB       QB             #>  9 00-0019596 T.Brady     Tom Brady           QB       QB             #> 10 00-0019596 T.Brady     Tom Brady           QB       QB             #> # ℹ 5,688 more rows #> # ℹ 47 more variables: headshot_url <chr>, recent_team <chr>, season <int>, #> #   week <int>, season_type <chr>, completions <int>, attempts <int>, #> #   passing_yards <dbl>, passing_tds <int>, interceptions <dbl>, …"},{"path":"https://nflreadr.nflverse.com/index.html","id":"data-sources","dir":"","previous_headings":"","what":"Data Sources","title":"nflreadr • Download nflverse Data","text":"Data accessed package stored GitHub can typically found one following repositories: nflverse/nflverse-data nflverse/nfldata nflverse/espnscrapeR-data dynastyprocess/data ffverse/ffopportunity full list functions, please see reference page. data maintained nflverse project team primarily automated via GitHub Actions. can check status schedules page : https://github.com/nflverse/nflverse-data","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"configuration","dir":"","previous_headings":"","what":"Configuration","title":"nflreadr • Download nflverse Data","text":"following options help configure default nflreadr behaviours. can also configure nflreadr display progress messages progressr package, e.g.","code":"options(nflreadr.verbose)  # TRUE/FALSE to silence messages such as cache warnings options(nflreadr.cache)  # one of \"memory\", \"filesystem\", or \"off\" options(nflreadr.prefer)  # one of \"qs\", \"rds\", \"parquet\", or \"csv\" options(nflreadr.download_path) # defaults to current working directory - change to specify where `nflverse_download()` places data. progressr::with_progress(load_rosters(seasons = 2010:2020))  |========            |  40%"},{"path":"https://nflreadr.nflverse.com/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"nflreadr • Download nflverse Data","text":"best places get help package : nflverse discord (package well anything R/NFL related) opening issue","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"nflreadr • Download nflverse Data","text":"Many hands make light work! ways can contribute project: can open issue ’d like request specific data report bug/error. ’d like contribute code, please check contribution guidelines.","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"terms-of-use","dir":"","previous_headings":"","what":"Terms of Use","title":"nflreadr • Download nflverse Data","text":"R code package released open source MIT License. NFL data accessed package belong respective owners, governed terms use.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"function converts dataframes \"home_\" \"away_\" prefixed columns \"team_\" \"opponent_\", doubles rows. makes sure one row team (opposed one row game).","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"","code":"clean_homeaway(dataframe, invert = NULL)"},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"dataframe dataframe invert character vector columns gets inverted referring away team (e.g. home spread = 1 gets converted away_spread = -1)","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"dataframe one row per team (twice long input dataframe)","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"","code":"# a small example dataframe s <- data.frame(    game_id = c(\"2020_20_TB_GB\", \"2020_20_BUF_KC\", \"2020_21_KC_TB\"),    game_type = c(\"CON\", \"CON\", \"SB\"),    away_team = c(\"TB\", \"BUF\", \"KC\"),    away_score = c(31L, 24L, 9L),    home_team = c(\"GB\", \"KC\", \"TB\"),    home_score = c(26L, 38L, 31L),    location = c(\"Home\", \"Home\", \"Neutral\"),    result = c(-5L, 14L, 22L),    spread_line = c(3, 3, -3)  )  clean_homeaway(s, invert = c(\"result\",\"spread_line\")) #>          game_id game_type opponent opponent_score team team_score location #> 1  2020_20_TB_GB       CON       TB             31   GB         26     home #> 2  2020_20_TB_GB       CON       GB             26   TB         31     away #> 3 2020_20_BUF_KC       CON      BUF             24   KC         38     home #> 4 2020_20_BUF_KC       CON       KC             38  BUF         24     away #> 5  2020_21_KC_TB        SB       KC              9   TB         31  neutral #> 6  2020_21_KC_TB        SB       TB             31   KC          9  neutral #>   result spread_line #> 1     -5           3 #> 2      5          -3 #> 3     14           3 #> 4    -14          -3 #> 5     22          -3 #> 6    -22           3"},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Player Merge Names — clean_player_names","title":"Create Player Merge Names — clean_player_names","text":"Applies name-cleaning heuristics facilitate joins. heuristics may include: removing periods apostrophes removing common suffixes, Jr, Sr, II, III, IV converting lowercase using ffscrapr::dp_name_mapping common name substitutions, Mitch Trubisky Mitchell Trubisky","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Player Merge Names — clean_player_names","text":"","code":"clean_player_names(   player_name,   lowercase = FALSE,   convert_lastfirst = TRUE,   use_name_database = TRUE,   convert_to_ascii = rlang::is_installed(\"stringi\") )"},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Player Merge Names — clean_player_names","text":"player_name character vector player names lowercase defaults FALSE - TRUE, converts lowercase convert_lastfirst defaults TRUE - converts names \"Last, First\" \"First Last\" use_name_database uses internal name database common substitutions (Mitchell Trubisky Mitch Trubisky etc) convert_to_ascii TRUE, transliterate latin-ascii via stringi package. Defaults TRUE stringi package installed.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Player Merge Names — clean_player_names","text":"character vector cleaned names","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Player Merge Names — clean_player_names","text":"Equivalent operation done ffscrapr::dp_clean_names() uses player name database.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Player Merge Names — clean_player_names","text":"","code":"clean_player_names(c(\"A.J. Green\", \"Odell Beckham Jr.  \", \"Le'Veon Bell Sr.\")) #> [1] \"AJ Green\"      \"Odell Beckham\" \"LeVeon Bell\"    clean_player_names(c(\"Trubisky,      Mitch\", \"Atwell, Chatarius\", \"Elliott, Zeke\", \"Elijah Moore\"),                   convert_lastfirst = TRUE) #> [1] \"Mitchell Trubisky\" \"Tutu Atwell\"       \"Ezekiel Elliott\"   #> [4] \"Elijah Moore\""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize NFL Team Abbreviations — clean_team_abbrs","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"function standardizes NFL team names, abbreviations, nicknames nflverse defaults. helps joins plotting, especially nflplotR package!","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"","code":"clean_team_abbrs(abbr, current_location = TRUE, keep_non_matches = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"abbr character vector abbreviations, full team names, team nicknames current_location TRUE (default), abbreviation recent team location used. keep_non_matches TRUE (default) element abbr matched internal mapping vectors kept . Otherwise replaced NA.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"character vector length abbr cleaned team abbreviations included team_abbr_mapping team_abbr_mapping_norelocate (depending value current_location). Non matches may replaced NA (depending value keep_non_matches).","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"","code":"x <- c(\"PIE\", \"LAR\", \"PIT\", \"CRD\", \"OAK\", \"SL\", \"Niners\", \"San Diego Chargers\") # use current location and keep non matches clean_team_abbrs(x) #> [1] \"PIE\" \"LA\"  \"PIT\" \"ARI\" \"LV\"  \"LA\"  \"SF\"  \"LAC\"  # keep old location and replace non matches clean_team_abbrs(x, current_location = FALSE, keep_non_matches = FALSE) #> [1] NA    \"LA\"  \"PIT\" \"ARI\" \"OAK\" \"STL\" \"SF\"  \"SD\""},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear function cache — clear_cache","title":"Clear function cache — clear_cache","text":"function clears memoised cache functions memoised nflreadr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear function cache — clear_cache","text":"","code":"clear_cache()  .clear_cache()"},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear function cache — clear_cache","text":"success message clearing cache.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear function cache — clear_cache","text":"","code":"clear_cache() #> ✔ nflreadr function cache cleared!"},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .csv / .csv.gz file from a remote connection — csv_from_url","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"thin wrapper data.table::fread, memoised & cached twenty four hours.","code":""},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"","code":"csv_from_url(...)"},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"... Arguments passed data.table::fread input single character string. value inspected deferred either file= (\\n present), text= (least one \\n present) cmd= (\\n present, least one space present, file name). Exactly one input=, file=, text=, cmd= used call. file File name working directory, path file (passed path.expand convenience), URL starting http://, file://, etc. Compressed files extension .gz .bz2 supported R.utils package installed. text input data character vector one lines, example returned readLines(). cmd shell command pre-processes file; e.g. fread(cmd=paste(\"grep\",word,\"filename\")). See Details. sep separator columns. Defaults character set [,\\t |;:] separates sample rows number lines number fields. Use NULL \"\" specify separator; .e. line single character column like base::readLines . sep2 separator within columns. list column returned cell vector values. much faster using less working memory strsplit afterwards similar techniques. column sep2 can different first character set [,\\t |;], sep, exists inside field outside quoted regions sample. NB: sep2 yet implemented. nrows maximum number rows read. Unlike read.table, need set estimate number rows file better speed already automatically determined fread almost instantly using large sample lines. nrows=0 returns column names typed empty columns determined large sample; useful dry run large file quickly check format consistency set files starting read . header first data line contain column names? Defaults according whether every non-empty field first data line type character. , TRUE supplied, empty column names given default name. na.strings character vector strings interpreted NA values. default, \",,\" columns types, including type character read NA consistency. ,\"\", unambiguous read empty string. read ,NA, NA, set na.strings=\"NA\". read ,, blank string \"\", set na.strings=NULL. occur file, strings na.strings appear quoted since string literal ,\"NA\", distinguished ,NA,, example, na.strings=\"NA\". stringsAsFactors Convert character columns factors? Acceptable inputs TRUE, FALSE, decimal value 0.0 1.0. stringsAsFactors = FALSE, string columns stored character vs. stored factor TRUE. stringsAsFactors = p 0 <= p <= 1, string columns col stored factor uniqueN(col)/nrow < p. verbose chatty report timings? skip 0 (default) start first line finds first row consistent number columns. automatically avoids irregular header information column names row. skip>0 means ignore first skip rows manually. skip=\"string\" searches \"string\" file (e.g. substring column names row) starts line (inspired read.xls package gdata). select vector column names numbers keep, drop rest. select may specify types way colClasses; .e., vector colname=type pairs, list type=col(s) pairs. forms select, order columns specified determines order columns result. drop Vector column names numbers drop, keep rest. colClasses utils::read.csv; .e., unnamed vector types corresponding columns file, named vector specifying types subset columns name. default, NULL means types inferred data file. , data.table supports named list vectors column names numbers list names class names; see examples. list form makes easier set batch columns particular class. column numbers used list form, refer column number file column number select drop applied.     type coercion results error, introduces NAs, result loss accuracy, coercion attempt aborted column warning column's type left unchanged. really desire data loss (e.g. reading 3.14 integer) truncate columns afterwards explicitly clear future readers code. integer64 \"integer64\" (default) reads columns detected containing integers larger 2^31 type bit64::integer64. Alternatively, \"double\"|\"numeric\" reads utils::read.csv ; .e., possibly loss precision silently. , \"character\". dec decimal separator utils::read.csv. \"auto\" (default), attempt made decide whether \".\" \",\" suitable input. See details. col.names vector optional names variables (columns). default use header column present detected, \"V\" followed column number. applied check.names key index. check.names default FALSE. TRUE names variables data.table checked ensure syntactically valid variable names. necessary adjusted (make.names) , also ensure duplicates. encoding default \"unknown\". possible options \"UTF-8\" \"Latin-1\".  Note: used re-encode input, rather enables handling encoded strings native encoding. quote default (\"\\\"\"), field starts double quote, fread handles embedded quotes robustly explained Details. fails, another attempt made read field , .e., quotes disabled. setting quote=\"\", field always read quotes disabled. expected ever need pass anything \\\"\\\" quote; .e., turn . strip.white Logical, default TRUE, case leading trailing whitespace stripped unquoted \"character\" fields. \"numeric\" fields always stripped leading trailing whitespace. fill logical integer (default FALSE). TRUE case rows unequal length, number columns estimated blank fields implicitly filled. integer provided used upper bound number columns. fill=Inf whole file read detecting number columns. blank.lines.skip logical, default FALSE. TRUE blank lines input ignored. key Character vector one column names passed setkey. valid argument data.table=TRUE. applicable, refer column names given col.names. index Character vector list character vectors one column names passed setindexv. key, comma-separated notation like index=\"x,y,z\" accepted convenience. valid argument data.table=TRUE. applicable, refer column names given col.names. showProgress TRUE displays progress console ETA greater 3 seconds. produced fread's C code nice (R level) txtProgressBar tkProgressBar easily available. data.table TRUE returns data.table. FALSE returns data.frame. default argument can changed options(datatable.fread.datatable=FALSE). nThread number threads use. Experiment see works best data hardware. logical01 TRUE column containing 0s 1s read logical, otherwise integer. logicalYN TRUE column containing Ys Ns read logical, otherwise character. keepLeadingZeros TRUE column containing numeric data leading zeros read character, otherwise leading zeros removed converted numeric. yaml TRUE, fread attempt parse (using yaml.load) top input YAML, glean parameters relevant improving performance fread data . entire YAML section returned parsed list yaml_metadata attribute. See Details. autostart Deprecated. Please use skip instead. tmpdir Directory use tmpdir argument tempfile calls, e.g. input URL shell command. default tempdir() can controlled setting TMPDIR starting R session; see base::tempdir. tz Relevant datetime values Z UTC-offset end, .e. unmarked datetime, written utils::write.csv. default tz=\"UTC\" reads unmarked datetime UTC POSIXct efficiently. tz=\"\" reads unmarked datetime type character (slowly) .POSIXct can interpret (slowly) character datetimes local timezone; e.g. using \"POSIXct\" colClasses=. Note fwrite() default writes datetime UTC including final Z therefore fwrite's output read fread consistently quickly without needing use tz= colClasses=. TZ environment variable set \"UTC\" (\"\" non-Windows unset vs `\"\"` significant) R session's timezone already UTC tz=\"\" result unmarked datetimes read UTC POSIXct. information, please see news items v1.13.0 v1.14.0.","code":""},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"dataframe created data.table::fread()","code":""},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"","code":"# \\donttest{ try({ # prevents cran errors   csv_from_url(\"https://github.com/nflverse/nflverse-data/releases/download/test/combines.csv\") }) #>       season draft_year           draft_team draft_round draft_ovr   pfr_id #>        <int>      <int>               <char>       <int>     <int>   <char> #>    1:   2000       2000        New York Jets           1        13 AbraJo00 #>    2:   2000       2000     Seattle Seahawks           1        19 AlexSh00 #>    3:   2000       2000   Kansas City Chiefs           6       188 AlfoDa20 #>    4:   2000         NA                               NA        NA          #>    5:   2000       2000    Carolina Panthers           1        23 AndeRa21 #>   ---                                                                       #> 7676:   2022       2022    Green Bay Packers           1        28 WyatDe00 #> 7677:   2022         NA                               NA        NA WydeJa00 #> 7678:   2022       2022     Cleveland Browns           4       124 YorkCa00 #> 7679:   2022         NA                               NA        NA          #> 7680:   2022       2022 New England Patriots           4       137 ZappBa00 #>                  cfb_id      player_name    pos           school     ht    wt #>                  <char>           <char> <char>           <char> <char> <int> #>    1:                       John Abraham    OLB   South Carolina    6-4   252 #>    2: shaun-alexander-1  Shaun Alexander     RB          Alabama    6-0   218 #>    3:                     Darnell Alford     OT      Boston Col.    6-4   334 #>    4:                       Kyle Allamon     TE       Texas Tech    6-2   253 #>    5:                   Rashard Anderson     CB    Jackson State    6-2   206 #>   ---                                                                         #> 7676:   devonte-wyatt-1    Devonte Wyatt     DT          Georgia    6-3   304 #> 7677: jalen-wydermyer-1  Jalen Wydermyer     TE        Texas A&M    6-4   255 #> 7678:       cade-york-1        Cade York      K              LSU    6-1   206 #> 7679:                        Nick Zakelj     OT          Fordham    6-6   316 #> 7680:    bailey-zappe-1     Bailey Zappe     QB Western Kentucky    6-1   215 #>       forty bench vertical broad_jump  cone shuttle #>       <num> <int>    <num>      <int> <num>   <num> #>    1:  4.55    NA       NA         NA    NA      NA #>    2:  4.58    NA       NA         NA    NA      NA #>    3:  5.56    23     25.0         94  8.48    4.98 #>    4:  4.97    NA     29.0        104  7.29    4.49 #>    5:  4.55    NA     34.0        123  7.18    4.15 #>   ---                                               #> 7676:  4.77    NA     29.0        111    NA      NA #> 7677:    NA    NA       NA         NA    NA      NA #> 7678:    NA    12       NA         NA    NA      NA #> 7679:  5.13    27     28.5        110  7.75    4.71 #> 7680:  4.88    NA     30.0        109  7.19    4.40 # }"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Combine — dictionary_combine","title":"Data Dictionary: Combine — dictionary_combine","text":"dataframe containing data dictionary load_combine()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Combine — dictionary_combine","text":"","code":"dictionary_combine"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_combine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Combine — dictionary_combine","text":"object class data.frame 18 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_contracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Contracts — dictionary_contracts","title":"Data Dictionary: Contracts — dictionary_contracts","text":"dataframe containing data dictionary load_contracts()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_contracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Contracts — dictionary_contracts","text":"","code":"dictionary_contracts"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_contracts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Contracts — dictionary_contracts","text":"object class data.frame 15 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_depth_charts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Depth Charts — dictionary_depth_charts","title":"Data Dictionary: Depth Charts — dictionary_depth_charts","text":"dataframe containing data dictionary load_depth_charts()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_depth_charts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Depth Charts — dictionary_depth_charts","text":"","code":"dictionary_depth_charts"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_depth_charts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Depth Charts — dictionary_depth_charts","text":"object class data.frame 12 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_draft_picks.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Draft Picks — dictionary_draft_picks","title":"Data Dictionary: Draft Picks — dictionary_draft_picks","text":"dataframe containing data dictionary load_draft_picks()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_draft_picks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Draft Picks — dictionary_draft_picks","text":"","code":"dictionary_draft_picks"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_draft_picks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Draft Picks — dictionary_draft_picks","text":"object class data.frame 36 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_espn_qbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","title":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","text":"dataframe containing data dictionary load_espn_qbr()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_espn_qbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","text":"","code":"dictionary_espn_qbr"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_espn_qbr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","text":"object class data.frame 23 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_opportunity.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","title":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","text":"dataframe containing data dictionary load_ff_opportunity()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_opportunity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","text":"","code":"dictionary_ff_opportunity"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_opportunity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","text":"object class data.frame 218 rows 4 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_playerids.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","title":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","text":"dataframe containing data dictionary load_ff_playerids()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_playerids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","text":"","code":"dictionary_ff_playerids"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_playerids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","text":"object class data.frame 35 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","title":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","text":"dataframe containing data dictionary load_ff_rankings()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","text":"","code":"dictionary_ff_rankings"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_rankings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","text":"object class data.frame 25 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ftn_charting.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: FTN Charting Data — dictionary_ftn_charting","title":"Data Dictionary: FTN Charting Data — dictionary_ftn_charting","text":"dataframe containing data dictionary load_ftn_charting()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ftn_charting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: FTN Charting Data — dictionary_ftn_charting","text":"","code":"dictionary_ftn_charting"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ftn_charting.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: FTN Charting Data — dictionary_ftn_charting","text":"object class data.frame 28 rows 5 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Injuries — dictionary_injuries","title":"Data Dictionary: Injuries — dictionary_injuries","text":"dataframe containing data dictionary load_injuries()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Injuries — dictionary_injuries","text":"","code":"dictionary_injuries"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_injuries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Injuries — dictionary_injuries","text":"object class data.frame 16 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_nextgen_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","title":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","text":"dataframe containing data dictionary load_nextgen_stats()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_nextgen_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","text":"","code":"dictionary_nextgen_stats"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_nextgen_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","text":"object class data.frame 51 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_participation.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Participation — dictionary_participation","title":"Data Dictionary: Participation — dictionary_participation","text":"dataframe containing data dictionary load_participation()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_participation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Participation — dictionary_participation","text":"","code":"dictionary_participation"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_participation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Participation — dictionary_participation","text":"object class data.frame 19 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Play by Play — dictionary_pbp","title":"Data Dictionary: Play by Play — dictionary_pbp","text":"dataframe containing data dictionary load_pbp()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Play by Play — dictionary_pbp","text":"","code":"dictionary_pbp"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pbp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Play by Play — dictionary_pbp","text":"object class data.frame 372 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pfr_passing.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: PFR Passing — dictionary_pfr_passing","title":"Data Dictionary: PFR Passing — dictionary_pfr_passing","text":"dataframe containing data dictionary load_pfr_passing()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pfr_passing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: PFR Passing — dictionary_pfr_passing","text":"","code":"dictionary_pfr_passing"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pfr_passing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: PFR Passing — dictionary_pfr_passing","text":"object class data.frame 28 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Player Stats — dictionary_player_stats","title":"Data Dictionary: Player Stats — dictionary_player_stats","text":"dataframe containing data dictionary load_player_stats()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Player Stats — dictionary_player_stats","text":"","code":"dictionary_player_stats"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Player Stats — dictionary_player_stats","text":"object class data.frame 48 rows 2 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","title":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","text":"dataframe containing data dictionary load_player_stats()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","text":"","code":"dictionary_player_stats_def"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats_def.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","text":"object class data.frame 22 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_players.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Players — dictionary_players","title":"Data Dictionary: Players — dictionary_players","text":"dataframe containing data dictionary load_players()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_players.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Players — dictionary_players","text":"","code":"dictionary_players"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_players.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Players — dictionary_players","text":"object class data.frame 39 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_roster_status.html","id":null,"dir":"Reference","previous_headings":"","what":"dictionary_roster_status — dictionary_roster_status","title":"dictionary_roster_status — dictionary_roster_status","text":"dictionary translating shorthand roster status verbose explanations status indicates.","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_roster_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dictionary_roster_status — dictionary_roster_status","text":"","code":"dictionary_roster_status"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_roster_status.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dictionary_roster_status — dictionary_roster_status","text":"object class data.frame 19 rows 2 columns.","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_rosters.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Rosters — dictionary_rosters","title":"Data Dictionary: Rosters — dictionary_rosters","text":"dataframe containing data dictionary load_rosters()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_rosters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Rosters — dictionary_rosters","text":"","code":"dictionary_rosters"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_rosters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Rosters — dictionary_rosters","text":"object class data.frame 25 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_schedules.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Schedules — dictionary_schedules","title":"Data Dictionary: Schedules — dictionary_schedules","text":"dataframe containing data dictionary load_schedules()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_schedules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Schedules — dictionary_schedules","text":"","code":"dictionary_schedules"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_schedules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Schedules — dictionary_schedules","text":"object class data.frame 45 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_snap_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Snap Counts — dictionary_snap_counts","title":"Data Dictionary: Snap Counts — dictionary_snap_counts","text":"dataframe containing data dictionary load_snap_counts()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_snap_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Snap Counts — dictionary_snap_counts","text":"","code":"dictionary_snap_counts"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_snap_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Snap Counts — dictionary_snap_counts","text":"object class data.frame 16 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_trades.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Trades — dictionary_trades","title":"Data Dictionary: Trades — dictionary_trades","text":"dataframe containing data dictionary load_trades()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_trades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Trades — dictionary_trades","text":"","code":"dictionary_trades"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_trades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Trades — dictionary_trades","text":"object class data.frame 11 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dot-for_cran.html","id":null,"dir":"Reference","previous_headings":"","what":"CRAN setup code — .for_cran","title":"CRAN setup code — .for_cran","text":"code comply CRAN policies, e.g. limiting data.table CPU cores examples/tests","code":""},{"path":"https://nflreadr.nflverse.com/reference/dot-for_cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CRAN setup code — .for_cran","text":"","code":".for_cran()"},{"path":"https://nflreadr.nflverse.com/reference/dot-sitrep_pkg_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Show dependency versions of installed packages — .sitrep_pkg_deps","title":"Show dependency versions of installed packages — .sitrep_pkg_deps","text":"Show dependency versions installed packages","code":""},{"path":"https://nflreadr.nflverse.com/reference/dot-sitrep_pkg_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show dependency versions of installed packages — .sitrep_pkg_deps","text":"","code":".sitrep_pkg_deps(   packages,   inst_pkgs = utils::installed.packages(),   recursive = TRUE )"},{"path":"https://nflreadr.nflverse.com/reference/dot-sitrep_pkg_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Show options for installed packages — .sitrep_pkg_opts","title":"Show options for installed packages — .sitrep_pkg_opts","text":"Show options installed packages","code":""},{"path":"https://nflreadr.nflverse.com/reference/dot-sitrep_pkg_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show options for installed packages — .sitrep_pkg_opts","text":"","code":".sitrep_pkg_opts(packages, redact_path = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Current Week — get_current_week","title":"Get Current Week — get_current_week","text":"helper function returns upcoming NFL regular season week based either nflverse schedules file (found load_schedules()) date-based heuristics (number weeks since first Monday September)","code":""},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Current Week — get_current_week","text":"","code":"get_current_week(use_date = FALSE, ...)"},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Current Week — get_current_week","text":"use_date logical determine whether use date-based heuristics determine current week, default FALSE (.e. uses schedule file) ... Arguments passed most_recent_season()","code":""},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Current Week — get_current_week","text":"current nfl regular season week numeric","code":""},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Current Week — get_current_week","text":"Note date heuristic count new week starting Thursdays, schedule-based method count new week last game previous week, e.g. MNF completed. Tan Ben argued .","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Current Week — get_current_week","text":"","code":"{   # \\donttest{     try({ # schedules file as per default requires online access     get_current_week()     })   # }   # using the date method works offline   get_current_week(use_date = TRUE) } #> [1] 22"},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":null,"dir":"Reference","previous_headings":"","what":"Coalescing join — join_coalesce","title":"Coalescing join — join_coalesce","text":"EXPERIMENTAL! function joins two dataframes together key, coalesces columns shared names (.e. fills NAs). utility function primarily used internally within nflverse help build player IDs","code":""},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coalescing join — join_coalesce","text":"","code":"join_coalesce(   x,   y,   by = NULL,   type = c(\"left\", \"inner\", \"full\"),   ...,   by.x = NULL,   by.y = NULL,   sort = TRUE,   incomparables = c(NA, NaN) )"},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coalescing join — join_coalesce","text":"x, y dataframes. coerced data.table keys join , plain named character vector type one \"left\" (rows x matching rows y), \"inner\" (matching rows x y), \"full\" (rows x y) ... args passed merge.data.frame() .x, .y alternate form keys join - provided, override . sort whether sort output join keys incomparables keys match , .e. NA match NA.","code":""},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coalescing join — join_coalesce","text":"data.frame joining x y dataframes together, every column x y patching NA values x y.","code":""},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coalescing join — join_coalesce","text":"","code":"x <- data.frame(id1 = c(NA_character_,letters[1:4]), a = c(1,NA,3,NA,5), b = 1:5 * 10) y <- data.frame(id2 = c(letters[3:11],NA_character_), a = -(1:10), c = 1:10 * 100)  join_coalesce(x,y, by = c(\"id1\"=\"id2\")) #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>    id1  a  b   c #> 1    a NA 20  NA #> 2    b  3 30  NA #> 3    c -1 40 100 #> 4    d  5 50 200 #> 5 <NA>  1 10  NA join_coalesce(x,y, by.x = \"id1\", by.y = \"id2\") #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>    id1  a  b   c #> 1    a NA 20  NA #> 2    b  3 30  NA #> 3    c -1 40 100 #> 4    d  5 50 200 #> 5 <NA>  1 10  NA join_coalesce(x,y, by = c(\"id1\"=\"id2\"), type = \"inner\") #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>   id1  a  b   c #> 1   c -1 40 100 #> 2   d  5 50 200 join_coalesce(x,y, by = c(\"id1\"=\"id2\"), type = \"full\") #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>     id1   a  b    c #> 1     a  NA 20   NA #> 2     b   3 30   NA #> 3     c  -1 40  100 #> 4     d   5 50  200 #> 5     e  -3 NA  300 #> 6     f  -4 NA  400 #> 7     g  -5 NA  500 #> 8     h  -6 NA  600 #> 9     i  -7 NA  700 #> 10    j  -8 NA  800 #> 11    k  -9 NA  900 #> 12 <NA>   1 10   NA #> 13 <NA> -10 NA 1000"},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latest Season — most_recent_season","title":"Get Latest Season — most_recent_season","text":"helper function choose recent season available given dataset","code":""},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latest Season — most_recent_season","text":"","code":"most_recent_season(roster = FALSE)  get_latest_season(roster = FALSE)  get_current_season(roster = FALSE)"},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latest Season — most_recent_season","text":"roster Either TRUE FALSE. TRUE, return current year March 15th, otherwise previous year. FALSE, return current year Thursday following Labor Day, .e. Thursday first Monday September. Otherwise previous year.","code":""},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latest Season — most_recent_season","text":"recent season (four digit numeric)","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Combine Data from PFR — load_combine","title":"Load Combine Data from PFR — load_combine","text":"Loads combine data since 2000 courtesy PFR.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Combine Data from PFR — load_combine","text":"","code":"load_combine(   seasons = TRUE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Combine Data from PFR — load_combine","text":"seasons numeric vector seasons return, default TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Combine Data from PFR — load_combine","text":"tibble NFL combine data provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Combine Data from PFR — load_combine","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_combine() }) #> ── nflverse combine measurements ─────────────────────────────────────────────── #> ℹ Data updated: 2025-03-12 17:18:16 UTC #> # A tibble: 8,649 × 18 #>    season draft_year draft_team  draft_round draft_ovr pfr_id cfb_id player_name #>     <int>      <dbl> <chr>             <dbl>     <dbl> <chr>  <chr>  <chr>       #>  1   2000       2000 New York J…           1        13 AbraJ… NA     John Abrah… #>  2   2000       2000 Seattle Se…           1        19 AlexS… shaun… Shaun Alex… #>  3   2000       2000 Kansas Cit…           6       188 AlfoD… NA     Darnell Al… #>  4   2000         NA NA                   NA        NA NA     NA     Kyle Allam… #>  5   2000       2000 Carolina P…           1        23 AndeR… NA     Rashard An… #>  6   2000         NA NA                   NA        NA arian… NA     Jake Arians #>  7   2000       2000 Washington…           1         2 ArriL… lavar… LaVar Arri… #>  8   2000         NA NA                   NA        NA AtkiC… NA     Corey Atki… #>  9   2000         NA NA                   NA        NA NA     NA     Kyle Atteb… #> 10   2000       2000 Chicago Be…           4       125 AustR… NA     Reggie Aus… #> # ℹ 8,639 more rows #> # ℹ 10 more variables: pos <chr>, school <chr>, ht <chr>, wt <dbl>, #> #   forty <dbl>, bench <dbl>, vertical <dbl>, broad_jump <dbl>, cone <dbl>, #> #   shuttle <dbl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Historical Player Contracts from OverTheCap.com — load_contracts","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"Loads player contracts OverTheCap.com","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"","code":"load_contracts(file_type = getOption(\"nflreadr.prefer\", default = \"rds\"))"},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"file_type One \"rds\", \"qs\", \"csv\", \"parquet\". Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"tibble active non-active NFL player contracts.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_contracts() }) #> ── nflverse Historical Contract Data from OverTheCap.com ─────────────────────── #> ℹ Data updated: 2025-08-18 07:29:22 UTC #> # A tibble: 47,093 × 25 #>    player      position team  is_active year_signed years value   apy guaranteed #>    <chr>       <chr>    <chr> <lgl>           <int> <int> <dbl> <dbl>      <dbl> #>  1 Joe Burrow  QB       Beng… TRUE             2023     5  275   55        147.  #>  2 Aaron Rodg… QB       NYJ/… FALSE            2022     3  151.  50.3      101.  #>  3 Josh Allen  QB       Bills FALSE            2021     6  258   43        100   #>  4 Russell Wi… QB       Bron… FALSE            2022     5  245   49        124   #>  5 Dak Presco… QB       Cowb… TRUE             2024     4  240   60        129   #>  6 Justin Her… QB       Char… TRUE             2023     5  262.  52.5      134.  #>  7 Lamar Jack… QB       Rave… TRUE             2023     5  260   52        135   #>  8 Patrick Ma… QB       Chie… TRUE             2020    10  450   45         63.1 #>  9 Jalen Hurts QB       Eagl… TRUE             2023     5  255   51        110   #> 10 Kyler Murr… QB       Card… TRUE             2022     5  230.  46.1      103.  #> # ℹ 47,083 more rows #> # ℹ 16 more variables: apy_cap_pct <dbl>, inflated_value <dbl>, #> #   inflated_apy <dbl>, inflated_guaranteed <dbl>, player_page <chr>, #> #   otc_id <int>, gsis_id <chr>, date_of_birth <chr>, height <chr>, #> #   weight <chr>, college <chr>, draft_year <int>, draft_round <int>, #> #   draft_overall <int>, draft_team <chr>, cols <list> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Weekly Depth Charts — load_depth_charts","title":"Load Weekly Depth Charts — load_depth_charts","text":"Loads depth charts NFL team week back 2001.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Weekly Depth Charts — load_depth_charts","text":"","code":"load_depth_charts(   seasons = most_recent_season(roster = TRUE),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Weekly Depth Charts — load_depth_charts","text":"seasons numeric vector specifying seasons return, TRUE returns available data. Defaults latest season available rosters. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Weekly Depth Charts — load_depth_charts","text":"tibble week-level depth charts team.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Weekly Depth Charts — load_depth_charts","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_depth_charts(2020) }) #> ── nflverse depth charts ─────────────────────────────────────────────────────── #> ℹ Data updated: 2024-08-04 21:44:01 UTC #> # A tibble: 36,168 × 15 #>    season club_code  week game_type depth_team last_name first_name #>     <int> <chr>     <int> <chr>     <chr>      <chr>     <chr>      #>  1   2020 ATL           1 REG       2          Hill      Brian      #>  2   2020 ATL           1 REG       3          Smith     Alton      #>  3   2020 ATL           1 REG       1          Jarrett   Grady      #>  4   2020 ATL           1 REG       2          Senat     Deadrin    #>  5   2020 ATL           1 REG       2          Hawkins   Jaylinn    #>  6   2020 ATL           1 REG       1          Koo       Younghoe   #>  7   2020 ATL           1 REG       1          Koo       Younghoe   #>  8   2020 ATL           1 REG       1          Ridley    Calvin     #>  9   2020 ATL           1 REG       2          Schaub    Matt       #> 10   2020 ATL           1 REG       3          Smith     Romarius   #> # ℹ 36,158 more rows #> # ℹ 8 more variables: football_name <chr>, formation <chr>, gsis_id <chr>, #> #   jersey_number <chr>, position <chr>, elias_id <chr>, depth_position <chr>, #> #   full_name <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Draft Picks from PFR — load_draft_picks","title":"Load Draft Picks from PFR — load_draft_picks","text":"Loads every draft pick since 1980 courtesy PFR.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Draft Picks from PFR — load_draft_picks","text":"","code":"load_draft_picks(   seasons = TRUE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Draft Picks from PFR — load_draft_picks","text":"seasons numeric vector seasons return, default TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Draft Picks from PFR — load_draft_picks","text":"tibble NFL draft picks provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Draft Picks from PFR — load_draft_picks","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_draft_picks() }) #> ── nflverse Draft Picks, via Pro Football Reference ──────────────────────────── #> ℹ Data updated: 2025-07-17 09:35:53 UTC #> # A tibble: 12,670 × 36 #>    season round  pick team  gsis_id pfr_player_id cfb_player_id  pfr_player_name #>     <int> <int> <int> <chr> <chr>   <chr>         <chr>          <chr>           #>  1   1980     1     1 DET   \"\"      SimsBi00      \"billy-sims-1\" Billy Sims      #>  2   1980     1     2 NYJ   \"\"      JoneLa00      \"lam-jones-1\"  Lam Jones       #>  3   1980     1     3 CIN   \"\"      MunoAn00      \"\"             Anthony Munoz   #>  4   1980     1     4 GNB   \"\"      ClarBr23      \"bruce-clark-… Bruce Clark     #>  5   1980     1     5 BAL   \"\"      DickCu00      \"curtis-dicke… Curtis Dickey   #>  6   1980     1     6 STL   \"\"      GreeCu21      \"curtis-greer… Curtis Greer    #>  7   1980     1     7 ATL   \"\"      MillJu00      \"junior-mille… Junior Miller   #>  8   1980     1     8 NYG   \"\"      HaynMa00      \"mark-haynes-… Mark Haynes     #>  9   1980     1     9 MIN   \"\"      MartDo21      \"\"             Doug Martin     #> 10   1980     1    10 SEA   \"\"      GreeJa01      \"jacob-green-… Jacob Green     #> # ℹ 12,660 more rows #> # ℹ 28 more variables: hof <lgl>, position <chr>, category <chr>, side <chr>, #> #   college <chr>, age <int>, to <int>, allpro <int>, probowls <int>, #> #   seasons_started <int>, w_av <int>, car_av <lgl>, dr_av <int>, games <int>, #> #   pass_completions <int>, pass_attempts <int>, pass_yards <int>, #> #   pass_tds <int>, pass_ints <int>, rush_atts <int>, rush_yards <int>, #> #   rush_tds <int>, receptions <int>, rec_yards <int>, rec_tds <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Load ESPN's QBR — load_espn_qbr","title":"Load ESPN's QBR — load_espn_qbr","text":"Load ESPN's QBR","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load ESPN's QBR — load_espn_qbr","text":"","code":"load_espn_qbr(   seasons = most_recent_season(),   summary_type = c(\"season\", \"week\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load ESPN's QBR — load_espn_qbr","text":"seasons numeric vector seasons return, data available since 2006. Defaults latest season available. TRUE select seasons. summary_type One \"season\" \"week\", defaults \"season\" file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load ESPN's QBR — load_espn_qbr","text":"tibble ESPN QBR data, summarized according summary_type","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load ESPN's QBR — load_espn_qbr","text":"","code":"# \\donttest{     load_espn_qbr(2020) #> ── nflverse QBR (via ESPN/espnscrapeR) ───────────────────────────────────────── #> ℹ Data updated: 2025-02-28 09:12:32 UTC #> # A tibble: 84 × 23 #>    season season_type game_week    team_abb player_id name_short  rank qbr_total #>     <int> <chr>       <chr>        <chr>    <chr>     <chr>      <dbl>     <dbl> #>  1   2020 Regular     Season Total GB       8439      A. Rodgers     1      79.8 #>  2   2020 Regular     Season Total KC       3139477   P. Mahomes     2      78.1 #>  3   2020 Regular     Season Total BUF      3918298   J. Allen       3      76.6 #>  4   2020 Regular     Season Total TEN      14876     R. Tanneh…     4      72.6 #>  5   2020 Regular     Season Total MIA      8664      R. Fitzpa…     5      70.9 #>  6   2020 Regular     Season Total NO       2580      D. Brees       6      68.3 #>  7   2020 Regular     Season Total BAL      3916387   L. Jackson     7      67.3 #>  8   2020 Regular     Season Total SEA      14881     R. Wilson      8      67.1 #>  9   2020 Regular     Season Total TB       2330      T. Brady       9      66   #> 10   2020 Regular     Season Total CLE      3052587   B. Mayfie…    10      65.5 #> # ℹ 74 more rows #> # ℹ 15 more variables: pts_added <dbl>, qb_plays <dbl>, epa_total <dbl>, #> #   pass <dbl>, run <dbl>, exp_sack <dbl>, penalty <dbl>, qbr_raw <dbl>, #> #   sack <dbl>, name_first <chr>, name_last <chr>, name_display <chr>, #> #   headshot_href <chr>, team <chr>, qualified <lgl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Expected Fantasy Points — load_ff_opportunity","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"function downloads precomputed expected points data ffopportunity automated releases.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"","code":"load_ff_opportunity(   seasons = most_recent_season(),   stat_type = c(\"weekly\", \"pbp_pass\", \"pbp_rush\"),   model_version = c(\"latest\", \"v1.0.0\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"seasons numeric vector seasons return, defaults recent season. set TRUE, returns available data. stat_type one \"weekly\", \"pbp_pass\", \"pbp_rush\" model_version one \"latest\" \"v1.0.0\"","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"Precomputed expected fantasy points data ffopportunity automated releases.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"","code":"# \\donttest{   try({ # prevents cran errors   load_ff_opportunity()   load_ff_opportunity(seasons = 2021, stat_type = \"pbp_pass\", model_version = \"v1.0.0\")   }) #> ── nflverse ffopportunity expected points: pbp_pass ──────────────────────────── #> ℹ Data updated: 2022-09-27 11:35:02 UTC #> # A tibble: 19,769 × 57 #>    game_id       play_id desc  passer_player_id passer_full_name passer_position #>    <chr>           <dbl> <chr> <chr>            <chr>            <chr>           #>  1 2021_01_ARI_…      76 (14:… 00-0029701       Ryan Tannehill   QB              #>  2 2021_01_ARI_…     100 (13:… 00-0029701       Ryan Tannehill   QB              #>  3 2021_01_ARI_…     152 (13:… 00-0035228       Kyler Murray     QB              #>  4 2021_01_ARI_…     218 (12:… 00-0035228       Kyler Murray     QB              #>  5 2021_01_ARI_…     253 (11:… 00-0035228       Kyler Murray     QB              #>  6 2021_01_ARI_…     386 (10:… 00-0035228       Kyler Murray     QB              #>  7 2021_01_ARI_…     410 (9:2… 00-0035228       Kyler Murray     QB              #>  8 2021_01_ARI_…     599 (8:3… 00-0035228       Kyler Murray     QB              #>  9 2021_01_ARI_…     621 (8:2… 00-0035228       Kyler Murray     QB              #> 10 2021_01_ARI_…     660 (8:1… 00-0035228       Kyler Murray     QB              #> # ℹ 19,759 more rows #> # ℹ 51 more variables: receiver_player_id <chr>, receiver_full_name <chr>, #> #   receiver_position <chr>, posteam <chr>, two_point_attempt <dbl>, #> #   two_point_converted <dbl>, pass_attempt <dbl>, receiving_yards <dbl>, #> #   first_down_pass <dbl>, fumble_lost <dbl>, season <int>, week <int>, #> #   complete_pass <fct>, yards_after_catch <dbl>, pass_touchdown <fct>, #> #   first_down <fct>, interception <fct>, relative_to_endzone <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Fantasy Player IDs — load_ff_playerids","title":"Load Fantasy Player IDs — load_ff_playerids","text":"Accesses DynastyProcess.com's database fantasy football player IDs, help connect nflverse various platforms IDs.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Fantasy Player IDs — load_ff_playerids","text":"","code":"load_ff_playerids()"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Fantasy Player IDs — load_ff_playerids","text":"dataframe player IDs","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Fantasy Player IDs — load_ff_playerids","text":"","code":"# \\donttest{ try({ # prevents cran errors load_ff_playerids() }) #> ── nflverse (ffverse) player IDs ─────────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:26:50 UTC #> # A tibble: 12,096 × 35 #>    mfl_id sportradar_id  fantasypros_id gsis_id pff_id sleeper_id nfl_id espn_id #>    <chr>  <chr>          <chr>          <chr>   <chr>  <chr>      <chr>  <chr>   #>  1 17030  3c76cab3-3df2… 24755          NA      NA     12522      NA     4688380 #>  2 17031  270e09bc-8bf8… 25968          NA      NA     12524      NA     4432762 #>  3 17032  53848cba-bcad… 23160          NA      NA     12508      NA     4689114 #>  4 17033  b0eb5b67-4ef2… 22884          NA      NA     12510      NA     4432734 #>  5 17034  d89f0384-21a6… 23680          NA      NA     12500      NA     4889929 #>  6 17035  38b62d7f-4403… 25373          NA      NA     12470      NA     4683423 #>  7 17036  b8a1b579-3a7e… 25972          NA      NA     12511      NA     4429955 #>  8 17037  299d4fe8-188c… 23150          NA      NA     12486      NA     4427238 #>  9 17038  451c7689-4fc2… 23066          NA      NA     12494      NA     4433971 #> 10 17039  94b8f9e1-3109… 23096          NA      NA     12545      NA     4360689 #> # ℹ 12,086 more rows #> # ℹ 27 more variables: yahoo_id <chr>, fleaflicker_id <chr>, cbs_id <chr>, #> #   pfr_id <chr>, cfbref_id <chr>, rotowire_id <chr>, rotoworld_id <chr>, #> #   ktc_id <chr>, stats_id <chr>, stats_global_id <chr>, fantasy_data_id <chr>, #> #   swish_id <chr>, name <chr>, merge_name <chr>, position <chr>, team <chr>, #> #   birthdate <date>, age <dbl>, draft_year <int>, draft_round <int>, #> #   draft_pick <int>, draft_ovr <chr>, twitter_username <chr>, height <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Latest FantasyPros Rankings — load_ff_rankings","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"Accesses DynastyProcess.com's repository latest FP expert consensus rankings - updated weekly basis.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"","code":"load_ff_rankings(type = c(\"draft\", \"week\", \"all\"))"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"type one \"draft\" (preseason), \"week\" (week, inseason), \"\" (full archive)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"dataframe expert consensus rankings","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"","code":"# \\donttest{ try({ # prevents cran errors load_ff_rankings() }) #> ── nflverse FP expert rankings ───────────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:26:50 UTC #> # A tibble: 5,766 × 25 #>    fp_page   page_type ecr_type player id    pos   team    ecr    sd  best worst #>    <chr>     <chr>     <chr>    <chr>  <chr> <chr> <chr> <dbl> <dbl> <dbl> <dbl> #>  1 /nfl/ran… best-dst  bp       Denve… 8090  DST   DEN     1     0       1     1 #>  2 /nfl/ran… best-dst  bp       Phila… 8230  DST   PHI     2.5   0.5     2     3 #>  3 /nfl/ran… best-dst  bp       Balti… 8020  DST   BAL     3.5   1.5     2     5 #>  4 /nfl/ran… best-dst  bp       Pitts… 8240  DST   PIT     4.5   1.5     3     6 #>  5 /nfl/ran… best-dst  bp       Minne… 8170  DST   MIN     7     3       4    10 #>  6 /nfl/ran… best-dst  bp       New Y… 8210  DST   NYJ     7.5   2.5     5    10 #>  7 /nfl/ran… best-dst  bp       Kansa… 8150  DST   KC      8     1       7     9 #>  8 /nfl/ran… best-dst  bp       Los A… 8250  DST   LAC     9.5   5.5     4    15 #>  9 /nfl/ran… best-dst  bp       Houst… 8120  DST   HOU     9.5   1.5     8    11 #> 10 /nfl/ran… best-dst  bp       Detro… 8100  DST   DET    10     3       7    13 #> # ℹ 5,756 more rows #> # ℹ 14 more variables: sportsdata_id <chr>, player_filename <chr>, #> #   yahoo_id <chr>, cbs_id <chr>, player_owned_avg <dbl>, #> #   player_owned_espn <dbl>, player_owned_yahoo <dbl>, player_image_url <chr>, #> #   player_square_image_url <chr>, rank_delta <dbl>, bye <dbl>, #> #   mergename <chr>, scrape_date <date>, tm <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"Load rds/csv/csv.gz/parquet/qs file remote URL","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"","code":"load_from_url(url, ..., seasons = TRUE, nflverse = FALSE)"},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"url vector URLs load memory. one URL provided, row-bind . ... named arguments added attributes data, e.g. nflverse_type = \"pbp\" seasons numeric vector years used filter dataframe's season column. TRUE (default), filter. nflverse TRUE add nflverse_data classing attributes.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"dataframe, possibly type nflverse_data","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"","code":"# \\donttest{ try({ # prevents cran errors   urls <- c(\"https://github.com/nflverse/nflverse-data/releases/download/rosters/roster_2020.csv\",             \"https://github.com/nflverse/nflverse-data/releases/download/rosters/roster_2021.csv\")  load_from_url(urls, nflverse = TRUE, nflverse_type = \"rosters for 2020 & 2021\") }) #> ── nflverse rosters for 2020 & 2021 ──────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:26:51 UTC #> # A tibble: 6,029 × 36 #>    season team  position depth_chart_position jersey_number status full_name     #>     <int> <chr> <chr>    <chr>                        <int> <chr>  <chr>         #>  1   2020 IND   K        K                                4 UFA    Adam Vinatie… #>  2   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  3   2020 NO    QB       QB                               9 ACT    Drew Brees    #>  4   2020 HOU   QB       QB                               3 INA    Josh McCown   #>  5   2020 LV    TE       TE                              82 ACT    Jason Witten  #>  6   2020 KC    LB       OLB                             94 UFA    Terrell Suggs #>  7   2020 DET   LS       LS                              48 ACT    Don Muhlbach  #>  8   2020 PHI   OL       T                               71 RES    Jason Peters  #>  9   2020 ATL   QB       QB                               8 ACT    Matt Schaub   #> 10   2020 ARI   P        P                                4 ACT    Andy Lee      #> # ℹ 6,019 more rows #> # ℹ 29 more variables: first_name <chr>, last_name <chr>, birth_date <IDate>, #> #   height <int>, weight <int>, college <chr>, gsis_id <chr>, espn_id <int>, #> #   sportradar_id <chr>, yahoo_id <int>, rotowire_id <int>, pff_id <int>, #> #   pfr_id <chr>, fantasy_data_id <int>, sleeper_id <int>, years_exp <int>, #> #   headshot_url <chr>, ngs_position <chr>, week <int>, game_type <chr>, #> #   status_description_abbr <chr>, football_name <chr>, esb_id <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":null,"dir":"Reference","previous_headings":"","what":"Load FTN Charting Data — load_ftn_charting","title":"Load FTN Charting Data — load_ftn_charting","text":"FTN Data manually charts plays graciously provided subset charting data published via nflverse. Data available 2022 season onwards charted within 48 hours following game. data released CC--SA 4.0 Creative Commons license attribution must made FTN Data via nflverse","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load FTN Charting Data — load_ftn_charting","text":"","code":"load_ftn_charting(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Load FTN Charting Data — load_ftn_charting","text":"FTNData.com","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load FTN Charting Data — load_ftn_charting","text":"seasons numeric vector seasons return, defaults recent season. set TRUE, returns available data. Data available 2022 onwards. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load FTN Charting Data — load_ftn_charting","text":"Play-level manual charting data FTN Data","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load FTN Charting Data — load_ftn_charting","text":"FTN Data","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ftn_charting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load FTN Charting Data — load_ftn_charting","text":"","code":"# \\donttest{   try({ # prevents cran errors   load_ftn_charting()   }) #> ── nflverse FTN Charting Data - please attribute to 'ftndata.com via nflverse' ─ #> ℹ Data updated: 2025-02-14 18:20:48 UTC #> # A tibble: 48,031 × 29 #>    ftn_game_id nflverse_game_id season  week ftn_play_id nflverse_play_id #>  *       <int> <chr>             <int> <int>       <int>            <int> #>  1        6449 2024_01_BAL_KC     2024     1     1057995               43 #>  2        6449 2024_01_BAL_KC     2024     1     1057996               60 #>  3        6449 2024_01_BAL_KC     2024     1     1057997               82 #>  4        6449 2024_01_BAL_KC     2024     1     1057998              118 #>  5        6449 2024_01_BAL_KC     2024     1     1057999              148 #>  6        6449 2024_01_BAL_KC     2024     1     1058000              183 #>  7        6449 2024_01_BAL_KC     2024     1     1058001              205 #>  8        6449 2024_01_BAL_KC     2024     1     1058002              239 #>  9        6449 2024_01_BAL_KC     2024     1     1058003              273 #> 10        6449 2024_01_BAL_KC     2024     1     1058004              298 #> # ℹ 48,021 more rows #> # ℹ 23 more variables: starting_hash <chr>, qb_location <chr>, #> #   n_offense_backfield <int>, n_defense_box <int>, is_no_huddle <lgl>, #> #   is_motion <lgl>, is_play_action <lgl>, is_screen_pass <lgl>, is_rpo <lgl>, #> #   is_trick_play <lgl>, is_qb_out_of_pocket <lgl>, #> #   is_interception_worthy <lgl>, is_throw_away <lgl>, read_thrown <chr>, #> #   is_catchable_ball <lgl>, is_contested_ball <lgl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Injury Reports — load_injuries","title":"Load Injury Reports — load_injuries","text":"Data collected API weekly injury report data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Injury Reports — load_injuries","text":"","code":"load_injuries(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Injury Reports — load_injuries","text":"seasons numeric vector seasons return, data available since 2009. Defaults latest season available. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Injury Reports — load_injuries","text":"tibble season-level injury report data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Injury Reports — load_injuries","text":"","code":"# \\donttest{ try({# prevents cran errors     load_injuries(2020) }) #> ── nflverse injury & practice reports ────────────────────────────────────────── #> ℹ Data updated: 2022-07-26 05:23:25 UTC #> # A tibble: 5,661 × 16 #>    season game_type team   week gsis_id  position full_name first_name last_name #>     <dbl> <chr>     <chr> <dbl> <chr>    <chr>    <chr>     <chr>      <chr>     #>  1   2020 REG       ARI       1 00-0035… WR       KeeSean … KeeSean    Johnson   #>  2   2020 REG       ARI       1 00-0022… WR       Larry Fi… Larry      Fitzgera… #>  3   2020 REG       ARI       1 00-0030… WR       DeAndre … DeAndre    Hopkins   #>  4   2020 REG       ARI       1 00-0031… TE       Maxx Wil… Maxx       Williams  #>  5   2020 REG       ARI       1 00-0036… T        Josh Jon… Josh       Jones     #>  6   2020 REG       ATL       1 00-0027… G        James Ca… James      Carpenter #>  7   2020 REG       ATL       1 00-0032… RB       Todd Gur… Todd       Gurley    #>  8   2020 REG       ATL       1 00-0026… C        Alex Mack Alex       Mack      #>  9   2020 REG       ATL       1 00-0032… DE       Dante Fo… Dante      Fowler    #> 10   2020 REG       ATL       1 00-0034… WR       Russell … Russell    Gage      #> # ℹ 5,651 more rows #> # ℹ 7 more variables: report_primary_injury <chr>, #> #   report_secondary_injury <chr>, report_status <chr>, #> #   practice_primary_injury <chr>, practice_secondary_injury <chr>, #> #   practice_status <chr>, date_modified <dttm> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"Loads player level weekly stats provided NFL Next Gen Stats starting 2016 season. Three different stat types available current season's data updates every night. NGS provide data players minimum number pass/rush/rec attempts.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"","code":"load_nextgen_stats(   seasons = TRUE,   stat_type = c(\"passing\", \"receiving\", \"rushing\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"seasons numeric vector specifying seasons return, TRUE returns available data stat_type one \"passing\", \"receiving\", \"rushing\" file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"tibble week-level player statistics provided NFL Next Gen Stats. Regular season summary given week == 0.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_nextgen_stats(stat_type = \"passing\")   load_nextgen_stats(stat_type = \"receiving\")   load_nextgen_stats(stat_type = \"rushing\") }) #> ── nflverse Next Gen Stats weekly rushing data ───────────────────────────────── #> ℹ Data updated: 2025-02-28 07:14:25 UTC #> # A tibble: 5,411 × 22 #>    season season_type  week player_display_name player_position team_abbr #>     <int> <chr>       <int> <chr>               <chr>           <chr>     #>  1   2016 REG             0 David Johnson       RB              ARI       #>  2   2016 REG             0 Latavius Murray     RB              LV        #>  3   2016 REG             0 Jonathan Stewart    RB              CAR       #>  4   2016 REG             0 LeSean McCoy        RB              BUF       #>  5   2016 REG             0 Doug Martin         RB              TB        #>  6   2016 REG             0 Paul Perkins        RB              NYG       #>  7   2016 REG             0 C.J. Anderson       RB              DEN       #>  8   2016 REG             0 Tim Hightower       RB              NO        #>  9   2016 REG             0 Matt Asiata         RB              MIN       #> 10   2016 REG             0 Jay Ajayi           RB              MIA       #> # ℹ 5,401 more rows #> # ℹ 16 more variables: efficiency <dbl>, #> #   percent_attempts_gte_eight_defenders <dbl>, avg_time_to_los <dbl>, #> #   rush_attempts <int>, rush_yards <int>, avg_rush_yards <dbl>, #> #   rush_touchdowns <int>, player_gsis_id <chr>, player_first_name <chr>, #> #   player_last_name <chr>, player_jersey_number <int>, #> #   player_short_name <chr>, expected_rush_yards <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Officials — load_officials","title":"Load Officials — load_officials","text":"Loads data officials assigned oversee specific game. Data available 2015 onwards.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Officials — load_officials","text":"","code":"load_officials(   seasons = TRUE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Officials — load_officials","text":"seasons numeric vector specifying seasons return, TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Officials — load_officials","text":"tibble one row per game per official.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Officials — load_officials","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_officials() }) #> ── nflverse officials ────────────────────────────────────────────────────────── #> ℹ Data updated: 2025-01-30 07:02:11 UTC #> # A tibble: 19,834 × 9 #>    game_id    game_key official_name  position  jersey_number official_id season #>    <chr>      <chr>    <chr>          <chr>             <int> <chr>        <int> #>  1 2015091000 56503    Brad Freeman   Field Ju…            88 25            2015 #>  2 2015091000 56503    Kent Payne     Head Lin…            79 28            2015 #>  3 2015091000 56503    Terrence Miles Back Jud…           111 139           2015 #>  4 2015091000 56503    Tim Podraza    Line Jud…            47 123           2015 #>  5 2015091000 56503    Scott Novak    Side Jud…             1 94            2015 #>  6 2015091000 56503    Undrey Wash    Umpire               96 134           2015 #>  7 2015091000 56503    Carl Cheffers  Referee              51 3             2015 #>  8 2015091300 56505    Lee Dyer       Back Jud…            27 72            2015 #>  9 2015091300 56505    Steve Zimmer   Field Ju…            33 116           2015 #> 10 2015091300 56505    Mark Hittner   Head Lin…            28 118           2015 #> # ℹ 19,824 more rows #> # ℹ 2 more variables: season_type <chr>, week <int> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Participation Data — load_participation","title":"Load Participation Data — load_participation","text":"Loads participation data nflverse-data repository","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Participation Data — load_participation","text":"","code":"load_participation(   seasons = most_recent_season(),   include_pbp = FALSE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Participation Data — load_participation","text":"seasons numeric vector 4-digit years associated given NFL seasons - defaults latest season. set TRUE, returns available data since 2016. include_pbp logical: download join pbp data? file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Participation Data — load_participation","text":"dataframe participation data, optionally merged play play","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Participation Data — load_participation","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_participation(seasons = 2020, include_pbp = TRUE) }) #> ── nflverse play-by-play participation ───────────────────────────────────────── #> ℹ Data updated: 2023-12-19 06:19:07 UTC #> # A tibble: 47,704 × 389 #>    nflverse_game_id play_id possession_team offense_formation offense_personnel #>    <chr>              <int> <chr>           <chr>             <chr>             #>  1 2020_01_ARI_SF         1 \"\"              NA                NA                #>  2 2020_01_ARI_SF        39 \"ARI\"           NA                NA                #>  3 2020_01_ARI_SF        54 \"SF\"            SHOTGUN           2 RB, 1 TE, 2 WR  #>  4 2020_01_ARI_SF        93 \"SF\"            SHOTGUN           2 RB, 1 TE, 2 WR  #>  5 2020_01_ARI_SF       118 \"SF\"            SINGLEBACK        2 RB, 1 TE, 2 WR  #>  6 2020_01_ARI_SF       143 \"SF\"            SHOTGUN           2 RB, 1 TE, 2 WR  #>  7 2020_01_ARI_SF       165 \"SF\"            SHOTGUN           1 RB, 1 TE, 3 WR  #>  8 2020_01_ARI_SF       197 \"SF\"            NA                NA                #>  9 2020_01_ARI_SF       226 \"SF\"            NA                NA                #> 10 2020_01_ARI_SF       245 \"ARI\"           SHOTGUN           1 RB, 1 TE, 3 WR  #> # ℹ 47,694 more rows #> # ℹ 384 more variables: defenders_in_box <int>, defense_personnel <chr>, #> #   number_of_pass_rushers <int>, players_on_play <chr>, offense_players <chr>, #> #   defense_players <chr>, n_offense <int>, n_defense <int>, #> #   ngs_air_yards <dbl>, time_to_throw <dbl>, was_pressure <lgl>, route <chr>, #> #   defense_man_zone_type <chr>, defense_coverage_type <chr>, #> #   old_game_id <chr>, home_team <chr>, away_team <chr>, season_type <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Play By Play — load_pbp","title":"Load Play By Play — load_pbp","text":"Loads play play seasons nflverse-data repository","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Play By Play — load_pbp","text":"","code":"load_pbp(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Play By Play — load_pbp","text":"seasons numeric vector 4-digit years associated given NFL seasons - defaults latest season. set TRUE, returns available data since 1999. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Play By Play — load_pbp","text":"complete nflfastR dataset returned nflfastR::build_nflfastR_pbp() (see ) given seasons","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Play By Play — load_pbp","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_pbp(2019:2020) }) #> ── nflverse play by play data ────────────────────────────────────────────────── #> ℹ Data updated: 2025-04-30 08:01:16 UTC #> # A tibble: 94,965 × 372 #>    play_id game_id     old_game_id home_team away_team season_type  week posteam #>      <dbl> <chr>       <chr>       <chr>     <chr>     <chr>       <int> <chr>   #>  1       1 2019_01_AT… 2019090804  MIN       ATL       REG             1 NA      #>  2      36 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  3      51 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  4      79 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  5     100 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  6     121 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  7     148 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #>  8     185 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #>  9     214 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #> 10     239 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #> # ℹ 94,955 more rows #> # ℹ 364 more variables: posteam_type <chr>, defteam <chr>, side_of_field <chr>, #> #   yardline_100 <dbl>, game_date <chr>, quarter_seconds_remaining <dbl>, #> #   half_seconds_remaining <dbl>, game_seconds_remaining <dbl>, #> #   game_half <chr>, quarter_end <dbl>, drive <dbl>, sp <dbl>, qtr <dbl>, #> #   down <dbl>, goal_to_go <int>, time <chr>, yrdln <chr>, ydstogo <dbl>, #> #   ydsnet <dbl>, desc <chr>, play_type <chr>, yards_gained <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Advanced Stats from PFR — load_pfr_advstats","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"Loads player level season stats provided Pro Football Reference starting 2018 season, primarily augment existing nflverse data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"","code":"load_pfr_advstats(   seasons = most_recent_season(),   stat_type = c(\"pass\", \"rush\", \"rec\", \"def\"),   summary_level = c(\"week\", \"season\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"seasons numeric vector specifying seasons return, TRUE returns available data stat_type one \"pass\", \"rush\", \"rec\", \"def\" summary_level one \"week\" (default) \"season\" - data available season level file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"tibble player statistics provided Pro Football Reference supplements data nflverse","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_pfr_advstats() }) #> ── nflverse advanced pass weekly stats via PFR ───────────────────────────────── #> ℹ Data updated: 2025-02-13 07:17:27 UTC #> # A tibble: 697 × 24 #>    game_id     pfr_game_id season  week game_type team  opponent pfr_player_name #>    <chr>       <chr>        <int> <int> <chr>     <chr> <chr>    <chr>           #>  1 2024_01_BA… 202409050k…   2024     1 REG       KC    BAL      Patrick Mahomes #>  2 2024_01_BA… 202409050k…   2024     1 REG       BAL   KC       Lamar Jackson   #>  3 2024_01_GB… 202409060p…   2024     1 REG       PHI   GB       Jalen Hurts     #>  4 2024_01_GB… 202409060p…   2024     1 REG       GB    PHI      Jordan Love     #>  5 2024_01_GB… 202409060p…   2024     1 REG       GB    PHI      Malik Willis    #>  6 2024_01_PI… 202409080a…   2024     1 REG       ATL   PIT      Kirk Cousins    #>  7 2024_01_PI… 202409080a…   2024     1 REG       PIT   ATL      Justin Fields   #>  8 2024_01_AR… 202409080b…   2024     1 REG       BUF   ARI      Josh Allen      #>  9 2024_01_AR… 202409080b…   2024     1 REG       ARI   BUF      Kyler Murray    #> 10 2024_01_TE… 202409080c…   2024     1 REG       CHI   TEN      Caleb Williams  #> # ℹ 687 more rows #> # ℹ 16 more variables: pfr_player_id <chr>, passing_drops <dbl>, #> #   passing_drop_pct <dbl>, receiving_drop <dbl>, receiving_drop_pct <dbl>, #> #   passing_bad_throws <dbl>, passing_bad_throw_pct <dbl>, times_sacked <dbl>, #> #   times_blitzed <dbl>, times_hurried <dbl>, times_hit <dbl>, #> #   times_pressured <dbl>, times_pressured_pct <dbl>, def_times_blitzed <dbl>, #> #   def_times_hurried <dbl>, def_times_hitqb <dbl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Advanced Passing Stats from PFR — load_pfr_passing","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"Loads player level season stats provided Pro Football Reference starting 2019 season.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"","code":"load_pfr_passing(seasons = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"seasons numeric vector specifying seasons return, TRUE returns available data","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"tibble season-level player statistics provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"","code":"# \\donttest{   load_pfr_passing() #> Warning: `load_pfr_passing()` has been deprecated, please use #> `load_pfr_advstats(stat_type = 'pass', summary_level = 'season')` #> ── nflverse advanced passing season stats via PFR ────────────────────────────── #> ℹ Data updated: 2025-08-04 17:56:58 UTC #> # A tibble: 750 × 37 #>    player        team  pass_attempts throwaways spikes drops drop_pct bad_throws #>    <chr>         <chr>         <dbl>      <dbl>  <dbl> <dbl>    <dbl>      <dbl> #>  1 Ben Roethlis… PIT             675          7      3    24      3.6        122 #>  2 Patrick Maho… KC              580         24      1    28      5           95 #>  3 Matt Ryan     ATL             608         18      1    36      6.1         79 #>  4 Jared Goff    LAR             561         29      2    13      2.5         93 #>  5 Andrew Luck   IND             639          8      2    37      5.9         88 #>  6 Aaron Rodgers GB              597         48      2    27      4.9        106 #>  7 Tom Brady     NE              570         22      2    25      4.6        103 #>  8 Philip Rivers LAC             508         13      0    23      4.6         64 #>  9 Eli Manning   NYG             576          9      1    24      4.2         94 #> 10 Kirk Cousins  MIN             606         17      3    25      4.3         68 #> # ℹ 740 more rows #> # ℹ 29 more variables: bad_throw_pct <dbl>, season <int>, pfr_id <chr>, #> #   pocket_time <dbl>, times_blitzed <dbl>, times_hurried <dbl>, #> #   times_hit <dbl>, times_pressured <dbl>, pressure_pct <dbl>, #> #   batted_balls <dbl>, on_tgt_throws <dbl>, on_tgt_pct <dbl>, rpo_plays <dbl>, #> #   rpo_yards <dbl>, rpo_pass_att <dbl>, rpo_pass_yards <dbl>, #> #   rpo_rush_att <dbl>, rpo_rush_yards <dbl>, pa_pass_att <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Player Level Weekly Stats — load_player_stats","title":"Load Player Level Weekly Stats — load_player_stats","text":"Load Player Level Weekly Stats","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Player Level Weekly Stats — load_player_stats","text":"","code":"load_player_stats(   seasons = most_recent_season(),   stat_type = c(\"offense\", \"defense\", \"kicking\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Player Level Weekly Stats — load_player_stats","text":"seasons numeric vector seasons return, defaults recent season. set TRUE, returns available data. stat_type one \"offense\", \"defense\", \"kicking\" file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Player Level Weekly Stats — load_player_stats","text":"tibble week-level player statistics aims match NFL official box scores.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Player Level Weekly Stats — load_player_stats","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_player_stats()   load_player_stats(stat_type = \"kicking\") }) #> ── nflverse player stats: kicking ────────────────────────────────────────────── #> ℹ Data updated: 2025-05-07 08:21:59 UTC #> # A tibble: 567 × 44 #>    season  week season_type player_id  team  player_name player_display_name #>     <int> <int> <chr>       <chr>      <chr> <chr>       <chr>               #>  1   2024     1 REG         00-0023853 ARI   M.Prater    Matt Prater         #>  2   2024     2 REG         00-0023853 ARI   M.Prater    Matt Prater         #>  3   2024     3 REG         00-0023853 ARI   M.Prater    Matt Prater         #>  4   2024     4 REG         00-0023853 ARI   M.Prater    Matt Prater         #>  5   2024     1 REG         00-0025565 TEN   N.Folk      Nick Folk           #>  6   2024     2 REG         00-0025565 TEN   N.Folk      Nick Folk           #>  7   2024     3 REG         00-0025565 TEN   N.Folk      Nick Folk           #>  8   2024     4 REG         00-0025565 TEN   N.Folk      Nick Folk           #>  9   2024     6 REG         00-0025565 TEN   N.Folk      Nick Folk           #> 10   2024     7 REG         00-0025565 TEN   N.Folk      Nick Folk           #> # ℹ 557 more rows #> # ℹ 37 more variables: position <chr>, position_group <chr>, #> #   headshot_url <chr>, fg_made <int>, fg_att <dbl>, fg_missed <int>, #> #   fg_blocked <int>, fg_long <dbl>, fg_pct <dbl>, fg_made_0_19 <int>, #> #   fg_made_20_29 <int>, fg_made_30_39 <int>, fg_made_40_49 <int>, #> #   fg_made_50_59 <int>, fg_made_60_ <int>, fg_missed_0_19 <int>, #> #   fg_missed_20_29 <int>, fg_missed_30_39 <int>, fg_missed_40_49 <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Players — load_players","title":"Load Players — load_players","text":"Load dataframe player-level information, including IDs mostly-immutable data (birthdates, college, draft position etc.)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Players — load_players","text":"","code":"load_players(file_type = getOption(\"nflreadr.prefer\", default = \"rds\"))"},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Players — load_players","text":"file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Players — load_players","text":"tibble one row per player.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"contribute","dir":"Reference","previous_headings":"","what":"Contribute","title":"Load Players — load_players","text":"Please visit https://github.com/nflverse/nflverse-players/blob/master/.github/CONTRIBUTING.md detailed explanation contribute (correct) players data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"scope-of-players-dataset","dir":"Reference","previous_headings":"","what":"Scope of Players Dataset","title":"Load Players — load_players","text":"nflverse players dataset aims single source truth comes NFL player IDs across various sources (relevant nflverse). following source IDs information considered -scope nflverse players dataset: Basic player information e.g. name, height, weight, age, date birth, years experience, college, status, position, headshot image (mostly GSIS) Draft information: draft year, draft round, draft pick, draft team (PFR) PFF position status information Primary source IDs : NFL (gsis_id, smart_id) - gsis_id primary key Pro Football Reference (pfr_id) Pro Football Focus (pff_id) Cap (otc_id) Elias Sports Bureau (esb_id) ESPN (espn_id)","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Players — load_players","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_players() }) #> ── nflverse nflverse Players Data ────────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 08:28:16 UTC #> # A tibble: 24,522 × 39 #>    gsis_id    display_name     common_first_name first_name last_name short_name #>    <chr>      <chr>            <chr>             <chr>      <chr>     <chr>      #>  1 00-0028830 Isaako Aaitui    Isaako            Isaako     Aaitui    NA         #>  2 00-0038389 Israel Abanikan… Israel            Israel     Abanikan… I.Abanika… #>  3 00-0024644 Jon Abbate       Jon               Jon        Abbate    NA         #>  4 ABB498348  Vince Abbott     Vince             Vincent    Abbott    NA         #>  5 00-0031021 Jared Abbrederis Jared             Jared      Abbreder… J.Abbrede… #>  6 00-0032860 Mehdi Abdesmad   Mehdi             Mehdi      Abdesmad  M.Abdesmad #>  7 00-0028564 Isa Abdul-Quddus Isa               Isa        Abdul-Qu… NA         #>  8 00-0032104 Ameer Abdullah   Ameer             Ameer      Abdullah  A.Abdullah #>  9 00-0023663 Hamza Abdullah   Hamza             Hamza      Abdullah  NA         #> 10 00-0025940 Husain Abdullah  Husain            Husain     Abdullah  NA         #> # ℹ 24,512 more rows #> # ℹ 33 more variables: football_name <chr>, suffix <chr>, esb_id <chr>, #> #   nfl_id <chr>, pfr_id <chr>, pff_id <chr>, otc_id <chr>, espn_id <chr>, #> #   smart_id <chr>, birth_date <chr>, position_group <chr>, position <chr>, #> #   ngs_position_group <chr>, ngs_position <chr>, height <int>, weight <int>, #> #   headshot <chr>, college_name <chr>, college_conference <chr>, #> #   jersey_number <chr>, rookie_season <int>, last_season <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Rosters — load_rosters","title":"Load Rosters — load_rosters","text":"Load Rosters","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Rosters — load_rosters","text":"","code":"load_rosters(   seasons = most_recent_season(roster = TRUE),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Rosters — load_rosters","text":"seasons numeric vector seasons return, defaults returning year's data March later. set TRUE, return available data. Data available back 1920. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Rosters — load_rosters","text":"tibble season-level roster data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Rosters — load_rosters","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_rosters(2020) }) #> ── nflverse roster data ──────────────────────────────────────────────────────── #> ℹ Data updated: 2023-09-13 01:04:45 UTC #> # A tibble: 3,068 × 36 #>    season team  position depth_chart_position jersey_number status full_name     #>     <int> <chr> <chr>    <chr>                        <int> <chr>  <chr>         #>  1   2020 IND   K        K                                4 UFA    Adam Vinatie… #>  2   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  3   2020 NO    QB       QB                               9 ACT    Drew Brees    #>  4   2020 HOU   QB       QB                               3 INA    Josh McCown   #>  5   2020 LV    TE       TE                              82 ACT    Jason Witten  #>  6   2020 KC    LB       OLB                             94 UFA    Terrell Suggs #>  7   2020 DET   LS       LS                              48 ACT    Don Muhlbach  #>  8   2020 PHI   OL       T                               71 RES    Jason Peters  #>  9   2020 ATL   QB       QB                               8 ACT    Matt Schaub   #> 10   2020 ARI   P        P                                4 ACT    Andy Lee      #> # ℹ 3,058 more rows #> # ℹ 29 more variables: first_name <chr>, last_name <chr>, birth_date <date>, #> #   height <dbl>, weight <int>, college <chr>, gsis_id <chr>, espn_id <chr>, #> #   sportradar_id <chr>, yahoo_id <chr>, rotowire_id <chr>, pff_id <chr>, #> #   pfr_id <chr>, fantasy_data_id <chr>, sleeper_id <chr>, years_exp <int>, #> #   headshot_url <chr>, ngs_position <chr>, week <int>, game_type <chr>, #> #   status_description_abbr <chr>, football_name <chr>, esb_id <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Weekly Rosters — load_rosters_weekly","title":"Load Weekly Rosters — load_rosters_weekly","text":"Returns week level rosters (rather latest given season returned load_rosters())","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Weekly Rosters — load_rosters_weekly","text":"","code":"load_rosters_weekly(   seasons = most_recent_season(roster = TRUE),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Weekly Rosters — load_rosters_weekly","text":"seasons numeric vector seasons return, defaults returning year's data March later. set TRUE, return available data. Data available back 2002. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Weekly Rosters — load_rosters_weekly","text":"tibble weekly roster data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Weekly Rosters — load_rosters_weekly","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_rosters_weekly(2020) }) #> ── nflverse weekly roster data ───────────────────────────────────────────────── #> ℹ Data updated: 2023-09-13 01:04:04 UTC #> # A tibble: 44,130 × 36 #>    season team  position depth_chart_position jersey_number status full_name     #>     <int> <chr> <chr>    <chr>                        <int> <chr>  <chr>         #>  1   2020 IND   K        K                                4 UFA    Adam Vinatie… #>  2   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  3   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  4   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  5   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  6   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  7   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  8   2020 TB    QB       QB                              12 ACT    Tom Brady     #>  9   2020 TB    QB       QB                              12 ACT    Tom Brady     #> 10   2020 TB    QB       QB                              12 ACT    Tom Brady     #> # ℹ 44,120 more rows #> # ℹ 29 more variables: first_name <chr>, last_name <chr>, birth_date <date>, #> #   height <dbl>, weight <int>, college <chr>, gsis_id <chr>, espn_id <chr>, #> #   sportradar_id <chr>, yahoo_id <chr>, rotowire_id <chr>, pff_id <chr>, #> #   pfr_id <chr>, fantasy_data_id <chr>, sleeper_id <chr>, years_exp <int>, #> #   headshot_url <chr>, ngs_position <chr>, week <int>, game_type <chr>, #> #   status_description_abbr <chr>, football_name <chr>, esb_id <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Game/Schedule Data — load_schedules","title":"Load Game/Schedule Data — load_schedules","text":"returns game/schedule information maintained Lee Sharpe.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Game/Schedule Data — load_schedules","text":"","code":"load_schedules(seasons = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Game/Schedule Data — load_schedules","text":"seasons numeric vector seasons return, default TRUE returns available data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Game/Schedule Data — load_schedules","text":"tibble game information past /future games.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Game/Schedule Data — load_schedules","text":"","code":"# \\donttest{ try({ # prevents cran errors  load_schedules(2020) }) #> ── nflverse games and schedules ──────────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:27:08 UTC #> # A tibble: 269 × 46 #>    game_id  season game_type  week gameday weekday gametime away_team away_score #>    <chr>     <int> <chr>     <int> <chr>   <chr>   <chr>    <chr>          <int> #>  1 2020_01…   2020 REG           1 2020-0… Thursd… 20:20    HOU               20 #>  2 2020_01…   2020 REG           1 2020-0… Sunday  13:00    SEA               38 #>  3 2020_01…   2020 REG           1 2020-0… Sunday  13:00    CLE                6 #>  4 2020_01…   2020 REG           1 2020-0… Sunday  13:00    NYJ               17 #>  5 2020_01…   2020 REG           1 2020-0… Sunday  13:00    LV                34 #>  6 2020_01…   2020 REG           1 2020-0… Sunday  13:00    CHI               27 #>  7 2020_01…   2020 REG           1 2020-0… Sunday  13:00    IND               20 #>  8 2020_01…   2020 REG           1 2020-0… Sunday  13:00    GB                43 #>  9 2020_01…   2020 REG           1 2020-0… Sunday  13:00    MIA               11 #> 10 2020_01…   2020 REG           1 2020-0… Sunday  13:00    PHI               17 #> # ℹ 259 more rows #> # ℹ 37 more variables: home_team <chr>, home_score <int>, location <chr>, #> #   result <int>, total <int>, overtime <int>, old_game_id <chr>, gsis <int>, #> #   nfl_detail_id <chr>, pfr <chr>, pff <int>, espn <chr>, ftn <int>, #> #   away_rest <int>, home_rest <int>, away_moneyline <int>, #> #   home_moneyline <int>, spread_line <dbl>, away_spread_odds <int>, #> #   home_spread_odds <int>, total_line <dbl>, under_odds <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Snap Counts from PFR — load_snap_counts","title":"Load Snap Counts from PFR — load_snap_counts","text":"Loads game level snap counts stats provided Pro Football Reference starting 2012 season.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Snap Counts from PFR — load_snap_counts","text":"","code":"load_snap_counts(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Snap Counts from PFR — load_snap_counts","text":"seasons numeric vector specifying seasons return, TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Snap Counts from PFR — load_snap_counts","text":"tibble game-level snap counts provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Snap Counts from PFR — load_snap_counts","text":"","code":"# \\donttest{   try({ # prevents CRAN errors   load_snap_counts()   }) #> ── nflverse snap counts ──────────────────────────────────────────────────────── #> ℹ Data updated: 2025-08-16 21:19:07 UTC #> # A tibble: 26,615 × 17 #>    game_id      pfr_game_id season game_type  week player pfr_player_id position #>    <chr>        <chr>        <int> <chr>     <int> <chr>  <chr>         <chr>    #>  1 2024_01_ARI… 202409080b…   2024 REG           1 Spenc… BrowSp00      T        #>  2 2024_01_ARI… 202409080b…   2024 REG           1 O'Cyr… TorrOC00      G        #>  3 2024_01_ARI… 202409080b…   2024 REG           1 Dion … DawkDi00      T        #>  4 2024_01_ARI… 202409080b…   2024 REG           1 David… EdwaDa01      G        #>  5 2024_01_ARI… 202409080b…   2024 REG           1 Josh … AlleJo02      QB       #>  6 2024_01_ARI… 202409080b…   2024 REG           1 Conno… McGoCo01      C        #>  7 2024_01_ARI… 202409080b…   2024 REG           1 Dalto… KincDa00      TE       #>  8 2024_01_ARI… 202409080b…   2024 REG           1 Keon … ColeKe02      WR       #>  9 2024_01_ARI… 202409080b…   2024 REG           1 James… CookJa01      RB       #> 10 2024_01_ARI… 202409080b…   2024 REG           1 Mack … HollMa00      WR       #> # ℹ 26,605 more rows #> # ℹ 9 more variables: team <chr>, opponent <chr>, offense_snaps <dbl>, #> #   offense_pct <dbl>, defense_snaps <dbl>, defense_pct <dbl>, st_snaps <dbl>, #> #   st_pct <dbl>, .progress <lgl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Load NFL Team Graphics, Colors, and Logos — load_teams","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"Loads team graphics, colors, logos - useful plots!","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"","code":"load_teams(current = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"current TRUE (default), returns standardized list current teams , abbreviations per team_abbr_mapping.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"tibble team-level image URLs hex color codes.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_teams() }) #> ── nflverse team graphics ────────────────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:27:10 UTC #> # A tibble: 32 × 16 #>    team_abbr team_name      team_id team_nick team_conf team_division team_color #>    <chr>     <chr>          <chr>   <chr>     <chr>     <chr>         <chr>      #>  1 ARI       Arizona Cardi… 3800    Cardinals NFC       NFC West      #97233F    #>  2 ATL       Atlanta Falco… 0200    Falcons   NFC       NFC South     #A71930    #>  3 BAL       Baltimore Rav… 0325    Ravens    AFC       AFC North     #241773    #>  4 BUF       Buffalo Bills  0610    Bills     AFC       AFC East      #00338D    #>  5 CAR       Carolina Pant… 0750    Panthers  NFC       NFC South     #0085CA    #>  6 CHI       Chicago Bears  0810    Bears     NFC       NFC North     #0B162A    #>  7 CIN       Cincinnati Be… 0920    Bengals   AFC       AFC North     #FB4F14    #>  8 CLE       Cleveland Bro… 1050    Browns    AFC       AFC North     #FF3C00    #>  9 DAL       Dallas Cowboys 1200    Cowboys   NFC       NFC East      #002244    #> 10 DEN       Denver Broncos 1400    Broncos   AFC       AFC West      #002244    #> # ℹ 22 more rows #> # ℹ 9 more variables: team_color2 <chr>, team_color3 <chr>, team_color4 <chr>, #> #   team_logo_wikipedia <chr>, team_logo_espn <chr>, team_wordmark <chr>, #> #   team_conference_logo <chr>, team_league_logo <chr>, team_logo_squared <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Trades — load_trades","title":"Load Trades — load_trades","text":"returns table historical trades maintained Lee Sharpe.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Trades — load_trades","text":"","code":"load_trades(seasons = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Trades — load_trades","text":"seasons numeric vector seasons return, default TRUE returns available data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Trades — load_trades","text":"tibble game information past /future games.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Trades — load_trades","text":"","code":"# \\donttest{  load_trades(2020) #> ── nflverse trades (via PFR / Lee Sharpe) ────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:27:10 UTC #> # A tibble: 211 × 11 #>    trade_id season trade_date gave  received pick_season pick_round pick_number #>       <dbl>  <dbl> <date>     <chr> <chr>          <dbl>      <dbl>       <dbl> #>  1     1465   2020 2020-03-03 DEN   JAX             2020          4         137 #>  2     1465   2020 2020-03-03 JAX   DEN               NA         NA          NA #>  3     1466   2020 2020-03-04 CAR   LAC               NA         NA          NA #>  4     1466   2020 2020-03-04 LAC   CAR               NA         NA          NA #>  5     1471   2020 2020-03-15 BAL   JAX             2020          5         157 #>  6     1471   2020 2020-03-15 JAX   BAL               NA         NA          NA #>  7     1467   2020 2020-03-16 IND   SF              2020          1          13 #>  8     1467   2020 2020-03-16 SF    IND               NA         NA          NA #>  9     1468   2020 2020-03-16 BUF   MIN             2020          1          22 #> 10     1468   2020 2020-03-16 BUF   MIN             2020          5         155 #> # ℹ 201 more rows #> # ℹ 3 more variables: conditional <dbl>, pfr_id <chr>, pfr_name <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/nflreadr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nflreadr: Download 'nflverse' Data — nflreadr-package","title":"nflreadr: Download 'nflverse' Data — nflreadr-package","text":"minimal package downloading data 'GitHub' repositories 'nflverse' project.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/nflreadr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nflreadr: Download 'nflverse' Data — nflreadr-package","text":"Maintainer: Tan Ho tan@tanho.ca (ORCID) [copyright holder] Authors: Sebastian Carl mrcaseb@gmail.com contributors: John Edwards edwards1860@gmail.com [contributor] Ben Baldwin bbaldwin206@gmail.com [contributor] Thomas Mock [contributor] Lee Sharpe [contributor] Pranav Rajaram pranavrajaram@gmail.com [contributor]","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"nflverse data class — nflverse_data-class","title":"nflverse data class — nflverse_data-class","text":"class special S3 print method tries read attached metadata provide timestamps source attributes. otherwise dispatch data.frame class.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_data-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nflverse data class — nflverse_data-class","text":"","code":"as.nflverse_data(df, nflverse_type = NULL, ...)"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_data_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"nflverse Timezone — nflverse_data_timezone","title":"nflverse Timezone — nflverse_data_timezone","text":"character string defining default timezone data across nflverse","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_data_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nflverse Timezone — nflverse_data_timezone","text":"","code":"nflverse_data_timezone"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_data_timezone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"nflverse Timezone — nflverse_data_timezone","text":"object class character length 1.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk download utilities via piggyback — nflverse_download","title":"Bulk download utilities via piggyback — nflverse_download","text":"function downloads updates data nflverse-data repository releases, creating subfolders match release structure.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk download utilities via piggyback — nflverse_download","text":"","code":"nflverse_download(   ...,   folder_path = getOption(\"nflreadr.download_path\", default = \".\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\"),   use_hive = file_type %in% c(\"parquet\", \"csv\"),   .token = \"default\" )"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk download utilities via piggyback — nflverse_download","text":"... releases download, provided either unquoted character format (.e. pbp \"pbp\" fine). Available release names can listed nflverse_releases() folder_path folder subfolders created release - defaults path specified options(nflreadr.download_path) \".\" (current working directory) file_type one c(\"rds\",\"parquet\", \"csv\", \"qs\") - defaults file type specified options(nflreadr.prefer) \"rds\" use_hive whether create hive-style partition folders season, e.g. \"~/pbp/.season=2021/pbp.csv\" .token GitHub API token, \"default\" uses gh::gh_token()","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk download utilities via piggyback — nflverse_download","text":"","code":"# \\donttest{ try({   ## could also set options like   # options(nflreadr.download_path = tempdir(), nflreadr.prefer = \"parquet\")    nflverse_download(combine, contracts, folder_path = tempdir(), file_type = \"parquet\")    list.files(tempdir(),pattern = \".parquet$\") # check that files were downloaded! }) #> ℹ Now downloading 2 files to /tmp/RtmpJv7Tae. #> ✔ Downloaded 2 files to /tmp/RtmpJv7Tae. #> character(0) # }"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute nflverse Game Identifiers — nflverse_game_id","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"Compute nflverse Game Identifiers","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"","code":"nflverse_game_id(season, week, away, home)"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"season 4 digit season 1999 output most_recent_season() week Numeric character giving week, 1 22. home, away Valid NFL team abbreviation can found team_abbr_mapping","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"character vector","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"","code":"nflverse_game_id(2022, 2, \"LAC\", \"KC\") #> [1] \"2022_02_LAC_KC\""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available nflverse releases — nflverse_releases","title":"List all available nflverse releases — nflverse_releases","text":"functions lists nflverse data releases available nflverse-data repo. Release names can used downloads nflverse_download().","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available nflverse releases — nflverse_releases","text":"","code":"nflverse_releases(.token = \"default\")"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all available nflverse releases — nflverse_releases","text":".token GitHub API token, \"default\" uses gh::gh_token()","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available nflverse releases — nflverse_releases","text":"dataframe containing release names, release descriptions, relevant release information.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all available nflverse releases — nflverse_releases","text":"","code":"# \\donttest{  try( # avoids cran failures, can skip in normal usage nflverse_releases() ) #> ── nflverse release listing ──────────────────────────────────────────────────── #> ℹ Data updated: 2025-08-18 10:27:25 UTC #> # A tibble: 22 × 8 #>    release_name   release_description timestamp   rds parquet   csv csv_gz   zip #>    <chr>          <chr>               <chr>     <int>   <int> <int>  <int> <int> #>  1 players        \"Player informatio… 2025-08-…     1       1     1      1     0 #>  2 contracts      \"OverTheCap contra… 2025-08-…     2       1     0      1     0 #>  3 players_compo… \"Component files f… 2025-08-…     2       2     2      2     0 #>  4 depth_charts   \"Depth chart data,… 2025-08-…    25      25    25      2     0 #>  5 rosters        \"Roster data, acce… 2025-08-…   106     106   106      3     0 #>  6 weekly_rosters \"Week-level roster… 2025-08-…    24      24    24      2     0 #>  7 snap_counts    \"Snap counts data,… 2025-08-…    13      13    14     13     0 #>  8 misc           \"Various bits of d… 2025-08-…     7       1     6      0     0 #>  9 stats_team      NA                 2025-08-…   104     104   104    104     0 #> 10 stats_player    NA                 2025-08-…   104     104   104    104     0 #> # ℹ 12 more rows # }"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_sitrep-class.html","id":null,"dir":"Reference","previous_headings":"","what":"nflverse_sitrep data class — nflverse_sitrep-class","title":"nflverse_sitrep data class — nflverse_sitrep-class","text":"nflverse_sitrep() returns S3 class created allow custom printing. otherwise dispatch list class.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_sitrep-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nflverse_sitrep data class — nflverse_sitrep-class","text":"Re-exporting methods::setOldClass() allows dataframes used S4 generics like DBI jsonlite.","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .parquet file from a remote connection — parquet_from_url","title":"Load .parquet file from a remote connection — parquet_from_url","text":"Retrieves parquet file URL. function cached","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .parquet file from a remote connection — parquet_from_url","text":"","code":"parquet_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .parquet file from a remote connection — parquet_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .parquet file from a remote connection — parquet_from_url","text":"dataframe parsed arrow::read_parquet()","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .parquet file from a remote connection — parquet_from_url","text":"","code":"# \\donttest{ try({   parquet_from_url(     \"https://github.com/nflverse/nflverse-data/releases/download/player_stats/player_stats.parquet\"   ) }) #>          player_id player_name   player_display_name position position_group #>             <char>      <char>                <char>   <char>         <char> #>      1: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      2: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      3: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      4: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      5: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>     ---                                                                      #> 134466: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134467: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134468: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134469: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134470: 00-0039921    T.Benson           Trey Benson       RB             RB #>                                                                              headshot_url #>                                                                                    <char> #>      1:                                                                              <NA> #>      2:                                                                              <NA> #>      3:                                                                              <NA> #>      4:                                                                              <NA> #>      5:                                                                              <NA> #>     ---                                                                                   #> 134466: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134467: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134468: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134469: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134470: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #>         recent_team season  week season_type opponent_team completions attempts #>              <char>  <int> <int>      <char>        <char>       <int>    <int> #>      1:         MIA   1999     1         REG           DEN           0        0 #>      2:         MIA   1999     2         REG           ARI           0        0 #>      3:         MIA   1999     4         REG           BUF           0        0 #>      4:         CLE   1999     7         REG            LA           0        0 #>      5:         CLE   1999     8         REG            NO           0        0 #>     ---                                                                         #> 134466:         ARI   2024    10         REG           NYJ           0        0 #> 134467:         ARI   2024    12         REG           SEA           0        0 #> 134468:         ARI   2024    13         REG           MIN           0        0 #> 134469:         ARI   2024    14         REG           SEA           0        0 #> 134470:         ARI   2024    15         REG            NE           0        0 #>         passing_yards passing_tds interceptions sacks sack_yards sack_fumbles #>                 <num>       <int>         <num> <num>      <num>        <int> #>      1:             0           0             0     0          0            0 #>      2:             0           0             0     0          0            0 #>      3:             0           0             0     0          0            0 #>      4:             0           0             0     0          0            0 #>      5:             0           0             0     0          0            0 #>     ---                                                                       #> 134466:             0           0             0     0          0            0 #> 134467:             0           0             0     0          0            0 #> 134468:             0           0             0     0          0            0 #> 134469:             0           0             0     0          0            0 #> 134470:             0           0             0     0          0            0 #>         sack_fumbles_lost passing_air_yards passing_yards_after_catch #>                     <int>             <num>                     <num> #>      1:                 0                 0                         0 #>      2:                 0                 0                         0 #>      3:                 0                 0                         0 #>      4:                 0                 0                         0 #>      5:                 0                 0                         0 #>     ---                                                               #> 134466:                 0                 0                         0 #> 134467:                 0                 0                         0 #> 134468:                 0                 0                         0 #> 134469:                 0                 0                         0 #> 134470:                 0                 0                         0 #>         passing_first_downs passing_epa passing_2pt_conversions  pacr dakota #>                       <num>       <num>                   <int> <num>  <num> #>      1:                   0          NA                       0    NA     NA #>      2:                   0          NA                       0    NA     NA #>      3:                   0          NA                       0    NA     NA #>      4:                   0          NA                       0    NA     NA #>      5:                   0          NA                       0    NA     NA #>     ---                                                                      #> 134466:                   0          NA                       0    NA     NA #> 134467:                   0          NA                       0    NA     NA #> 134468:                   0          NA                       0    NA     NA #> 134469:                   0          NA                       0    NA     NA #> 134470:                   0          NA                       0    NA     NA #>         carries rushing_yards rushing_tds rushing_fumbles rushing_fumbles_lost #>           <int>         <num>       <int>           <num>                <num> #>      1:      16            60           1               0                    0 #>      2:       9            33           0               0                    0 #>      3:       3             2           0               0                    0 #>      4:       6            27           0               0                    0 #>      5:      13            39           0               0                    0 #>     ---                                                                        #> 134466:      10            62           0               0                    0 #> 134467:       4            18           0               0                    0 #> 134468:       3            20           0               0                    0 #> 134469:       2            15           0               0                    0 #> 134470:       5            22           0               0                    0 #>         rushing_first_downs rushing_epa rushing_2pt_conversions receptions #>                       <num>       <num>                   <int>      <int> #>      1:                   4  6.24877114                       0          1 #>      2:                   1 -1.43495017                       0          3 #>      3:                   0 -1.53995173                       0          0 #>      4:                   0  0.21605089                       0          2 #>      5:                   2 -2.97225885                       0          0 #>     ---                                                                    #> 134466:                   3  1.51264573                       0          2 #> 134467:                   0 -0.32611939                       0          0 #> 134468:                   1  0.51592559                       0          0 #> 134469:                   1  0.05310984                       0          1 #> 134470:                   2 -0.38436320                       0          0 #>         targets receiving_yards receiving_tds receiving_fumbles #>           <int>           <num>         <int>             <num> #>      1:       1               7             0                 0 #>      2:       4              18             0                 0 #>      3:       1               0             0                 0 #>      4:       2               8             0                 0 #>      5:       0               0             0                 0 #>     ---                                                         #> 134466:       2              25             0                 0 #> 134467:       0               0             0                 0 #> 134468:       0               0             0                 0 #> 134469:       1               4             0                 0 #> 134470:       0               0             0                 0 #>         receiving_fumbles_lost receiving_air_yards receiving_yards_after_catch #>                          <num>               <num>                       <num> #>      1:                      0                   0                           0 #>      2:                      0                   0                           0 #>      3:                      0                   0                           0 #>      4:                      0                   0                           0 #>      5:                      0                   0                           0 #>     ---                                                                        #> 134466:                      0                  -8                          33 #> 134467:                      0                   0                           0 #> 134468:                      0                   0                           0 #> 134469:                      0                  -5                           9 #> 134470:                      0                   0                           0 #>         receiving_first_downs receiving_epa receiving_2pt_conversions   racr #>                         <num>         <num>                     <int>  <num> #>      1:                     0     0.2923782                         0  0.000 #>      2:                     1     0.3770089                         0  0.000 #>      3:                     0    -0.6995777                         0     NA #>      4:                     0    -0.2284540                         0  0.000 #>      5:                     0            NA                         0     NA #>     ---                                                                      #> 134466:                     2     1.9870165                         0 -3.125 #> 134467:                     0            NA                         0     NA #> 134468:                     0            NA                         0     NA #> 134469:                     0    -0.1444960                         0 -0.800 #> 134470:                     0            NA                         0     NA #>         target_share air_yards_share       wopr special_teams_tds #>                <num>           <num>      <num>             <num> #>      1:   0.05263158             NaN        NaN                 0 #>      2:   0.11764706             NaN        NaN                 0 #>      3:   0.02380952             NaN        NaN                 0 #>      4:   0.05000000             NaN        NaN                 0 #>      5:           NA              NA         NA                 0 #>     ---                                                           #> 134466:   0.08333333     -0.07207207 0.07454955                 0 #> 134467:           NA              NA         NA                 0 #> 134468:           NA              NA         NA                 0 #> 134469:   0.02631579     -0.03184713 0.01718069                 0 #> 134470:           NA              NA         NA                 0 #>         fantasy_points fantasy_points_ppr #>                  <num>              <num> #>      1:           12.7               13.7 #>      2:            5.1                8.1 #>      3:            0.2                0.2 #>      4:            3.5                5.5 #>      5:            3.9                3.9 #>     ---                                   #> 134466:            8.7               10.7 #> 134467:            1.8                1.8 #> 134468:            2.0                2.0 #> 134469:            1.9                2.9 #> 134470:            2.2                2.2 # }"},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate player name mappings — player_name_mapping","title":"Alternate player name mappings — player_name_mapping","text":"named character vector mapping common alternate names, re-exported ffscrapr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate player name mappings — player_name_mapping","text":"","code":"player_name_mapping"},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate player name mappings — player_name_mapping","text":"named character vector name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate player name mappings — player_name_mapping","text":"can suggest additions table opening issue ffscrapr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate player name mappings — player_name_mapping","text":"","code":"# \\donttest{ player_name_mapping[c(\"Chatarius Atwell\", \"Robert Kelley\")] #> Chatarius Atwell    Robert Kelley  #>    \"Tutu Atwell\"     \"Rob Kelley\"  # }"},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":null,"dir":"Reference","previous_headings":"","what":"Progressively — progressively","title":"Progressively — progressively","text":"function helps add progress-reporting function - given function f() progressor p(), return new function calls f() (exiting) call p() every iteration. inspired purrr's safely, quietly, possibly function decorators.","code":""},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressively — progressively","text":"","code":"progressively(f, p = NULL)"},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressively — progressively","text":"f function add progressor functionality . p function one created progressr::progressor() - also accepts purrr-style lambda functions.","code":""},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progressively — progressively","text":"function f calls p() iteration.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progressively — progressively","text":"","code":"# \\donttest{ try({ # prevents cran errors  urls <- rep(\"https://github.com/nflverse/nflverse-data/releases/download/test/combines.csv\",3)  lapply(urls, progressively(read.csv, ~cli::cli_progress_step('Loading...')))  read_rosters <- function(urls){   p <- progressr::progressor(along = urls)   lapply(urls, progressively(read.csv, p)) }  progressr::with_progress(read_rosters())  }) #> ℹ Loading... #> ✔ Loading... [9ms] #>  #> ℹ Loading... #> ✔ Loading... [7ms] #>  #> ℹ Loading... #> ✔ Loading... [8ms] #>  #> Error in read_rosters() : argument \"urls\" is missing, with no default # }"},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .qs file from a remote connection — qs_from_url","title":"Load .qs file from a remote connection — qs_from_url","text":"Load .qs file remote connection","code":""},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .qs file from a remote connection — qs_from_url","text":"","code":"qs_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .qs file from a remote connection — qs_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .qs file from a remote connection — qs_from_url","text":"dataframe parsed qs::qdeserialize()","code":""},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .qs file from a remote connection — qs_from_url","text":"","code":"# \\donttest{ try({   qs_from_url(     \"https://github.com/nflverse/nflverse-data/releases/download/player_stats/player_stats.qs\"   ) }) #>          player_id player_name   player_display_name position position_group #>             <char>      <char>                <char>   <char>         <char> #>      1: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      2: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      3: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      4: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      5: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>     ---                                                                      #> 134466: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134467: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134468: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134469: 00-0039921    T.Benson           Trey Benson       RB             RB #> 134470: 00-0039921    T.Benson           Trey Benson       RB             RB #>                                                                              headshot_url #>                                                                                    <char> #>      1:                                                                              <NA> #>      2:                                                                              <NA> #>      3:                                                                              <NA> #>      4:                                                                              <NA> #>      5:                                                                              <NA> #>     ---                                                                                   #> 134466: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134467: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134468: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134469: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #> 134470: https://static.www.nfl.com/image/upload/f_auto,q_auto/league/iu0gbspz3kjdqlazvtkn #>         recent_team season  week season_type opponent_team completions attempts #>              <char>  <int> <int>      <char>        <char>       <int>    <int> #>      1:         MIA   1999     1         REG           DEN           0        0 #>      2:         MIA   1999     2         REG           ARI           0        0 #>      3:         MIA   1999     4         REG           BUF           0        0 #>      4:         CLE   1999     7         REG            LA           0        0 #>      5:         CLE   1999     8         REG            NO           0        0 #>     ---                                                                         #> 134466:         ARI   2024    10         REG           NYJ           0        0 #> 134467:         ARI   2024    12         REG           SEA           0        0 #> 134468:         ARI   2024    13         REG           MIN           0        0 #> 134469:         ARI   2024    14         REG           SEA           0        0 #> 134470:         ARI   2024    15         REG            NE           0        0 #>         passing_yards passing_tds interceptions sacks sack_yards sack_fumbles #>                 <num>       <int>         <num> <num>      <num>        <int> #>      1:             0           0             0     0          0            0 #>      2:             0           0             0     0          0            0 #>      3:             0           0             0     0          0            0 #>      4:             0           0             0     0          0            0 #>      5:             0           0             0     0          0            0 #>     ---                                                                       #> 134466:             0           0             0     0          0            0 #> 134467:             0           0             0     0          0            0 #> 134468:             0           0             0     0          0            0 #> 134469:             0           0             0     0          0            0 #> 134470:             0           0             0     0          0            0 #>         sack_fumbles_lost passing_air_yards passing_yards_after_catch #>                     <int>             <num>                     <num> #>      1:                 0                 0                         0 #>      2:                 0                 0                         0 #>      3:                 0                 0                         0 #>      4:                 0                 0                         0 #>      5:                 0                 0                         0 #>     ---                                                               #> 134466:                 0                 0                         0 #> 134467:                 0                 0                         0 #> 134468:                 0                 0                         0 #> 134469:                 0                 0                         0 #> 134470:                 0                 0                         0 #>         passing_first_downs passing_epa passing_2pt_conversions  pacr dakota #>                       <num>       <num>                   <int> <num>  <num> #>      1:                   0          NA                       0    NA     NA #>      2:                   0          NA                       0    NA     NA #>      3:                   0          NA                       0    NA     NA #>      4:                   0          NA                       0    NA     NA #>      5:                   0          NA                       0    NA     NA #>     ---                                                                      #> 134466:                   0          NA                       0    NA     NA #> 134467:                   0          NA                       0    NA     NA #> 134468:                   0          NA                       0    NA     NA #> 134469:                   0          NA                       0    NA     NA #> 134470:                   0          NA                       0    NA     NA #>         carries rushing_yards rushing_tds rushing_fumbles rushing_fumbles_lost #>           <int>         <num>       <int>           <num>                <num> #>      1:      16            60           1               0                    0 #>      2:       9            33           0               0                    0 #>      3:       3             2           0               0                    0 #>      4:       6            27           0               0                    0 #>      5:      13            39           0               0                    0 #>     ---                                                                        #> 134466:      10            62           0               0                    0 #> 134467:       4            18           0               0                    0 #> 134468:       3            20           0               0                    0 #> 134469:       2            15           0               0                    0 #> 134470:       5            22           0               0                    0 #>         rushing_first_downs rushing_epa rushing_2pt_conversions receptions #>                       <num>       <num>                   <int>      <int> #>      1:                   4  6.24877114                       0          1 #>      2:                   1 -1.43495017                       0          3 #>      3:                   0 -1.53995173                       0          0 #>      4:                   0  0.21605089                       0          2 #>      5:                   2 -2.97225885                       0          0 #>     ---                                                                    #> 134466:                   3  1.51264573                       0          2 #> 134467:                   0 -0.32611939                       0          0 #> 134468:                   1  0.51592559                       0          0 #> 134469:                   1  0.05310984                       0          1 #> 134470:                   2 -0.38436320                       0          0 #>         targets receiving_yards receiving_tds receiving_fumbles #>           <int>           <num>         <int>             <num> #>      1:       1               7             0                 0 #>      2:       4              18             0                 0 #>      3:       1               0             0                 0 #>      4:       2               8             0                 0 #>      5:       0               0             0                 0 #>     ---                                                         #> 134466:       2              25             0                 0 #> 134467:       0               0             0                 0 #> 134468:       0               0             0                 0 #> 134469:       1               4             0                 0 #> 134470:       0               0             0                 0 #>         receiving_fumbles_lost receiving_air_yards receiving_yards_after_catch #>                          <num>               <num>                       <num> #>      1:                      0                   0                           0 #>      2:                      0                   0                           0 #>      3:                      0                   0                           0 #>      4:                      0                   0                           0 #>      5:                      0                   0                           0 #>     ---                                                                        #> 134466:                      0                  -8                          33 #> 134467:                      0                   0                           0 #> 134468:                      0                   0                           0 #> 134469:                      0                  -5                           9 #> 134470:                      0                   0                           0 #>         receiving_first_downs receiving_epa receiving_2pt_conversions   racr #>                         <num>         <num>                     <int>  <num> #>      1:                     0     0.2923782                         0  0.000 #>      2:                     1     0.3770089                         0  0.000 #>      3:                     0    -0.6995777                         0     NA #>      4:                     0    -0.2284540                         0  0.000 #>      5:                     0            NA                         0     NA #>     ---                                                                      #> 134466:                     2     1.9870165                         0 -3.125 #> 134467:                     0            NA                         0     NA #> 134468:                     0            NA                         0     NA #> 134469:                     0    -0.1444960                         0 -0.800 #> 134470:                     0            NA                         0     NA #>         target_share air_yards_share       wopr special_teams_tds #>                <num>           <num>      <num>             <num> #>      1:   0.05263158             NaN        NaN                 0 #>      2:   0.11764706             NaN        NaN                 0 #>      3:   0.02380952             NaN        NaN                 0 #>      4:   0.05000000             NaN        NaN                 0 #>      5:           NA              NA         NA                 0 #>     ---                                                           #> 134466:   0.08333333     -0.07207207 0.07454955                 0 #> 134467:           NA              NA         NA                 0 #> 134468:           NA              NA         NA                 0 #> 134469:   0.02631579     -0.03184713 0.01718069                 0 #> 134470:           NA              NA         NA                 0 #>         fantasy_points fantasy_points_ppr #>                  <num>              <num> #>      1:           12.7               13.7 #>      2:            5.1                8.1 #>      3:            0.2                0.2 #>      4:            3.5                5.5 #>      5:            3.9                3.9 #>     ---                                   #> 134466:            8.7               10.7 #> 134467:            1.8                1.8 #> 134468:            2.0                2.0 #> 134469:            1.9                2.9 #> 134470:            2.2                2.2 # }"},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load raw filedata from a remote connection — raw_from_url","title":"Load raw filedata from a remote connection — raw_from_url","text":"function allows retrieve data URL raw format, can passed appropriate file-reading function. Data memoised/cached 24 hours.","code":""},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load raw filedata from a remote connection — raw_from_url","text":"","code":"raw_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load raw filedata from a remote connection — raw_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load raw filedata from a remote connection — raw_from_url","text":"raw vector","code":""},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load raw filedata from a remote connection — raw_from_url","text":"","code":"# \\donttest{ try({ # prevents CRAN errors head(raw_from_url(   \"https://github.com/nflverse/nflverse-data/releases/download/test/combines.rds\"   ), 50) }) #>  [1] 1f 8b 08 00 00 00 00 00 00 06 ec fd 49 8f 24 49 96 26 08 6a a3 6b a6 b2 02 #> [26] a8 1c ad aa 1c a0 0e 85 82 a1 d1 98 2e 0c ba 1c ee 1e 1e 91 19 3d 3d 13 a6 # }"},{"path":"https://nflreadr.nflverse.com/reference/rbindlist_with_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"rbindlist but maintain attributes of last file — rbindlist_with_attrs","title":"rbindlist but maintain attributes of last file — rbindlist_with_attrs","text":"rbindlist maintain attributes last file","code":""},{"path":"https://nflreadr.nflverse.com/reference/rbindlist_with_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rbindlist but maintain attributes of last file — rbindlist_with_attrs","text":"","code":"rbindlist_with_attrs(dflist)"},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .rds file from a remote connection — rds_from_url","title":"Load .rds file from a remote connection — rds_from_url","text":"Load .rds file remote connection","code":""},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .rds file from a remote connection — rds_from_url","text":"","code":"rds_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .rds file from a remote connection — rds_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .rds file from a remote connection — rds_from_url","text":"dataframe created readRDS()","code":""},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .rds file from a remote connection — rds_from_url","text":"","code":"# \\donttest{ try({ # prevents cran errors   rds_from_url(\"https://github.com/nflverse/nflverse-data/releases/download/test/combines.rds\") }) #>       season draft_year           draft_team draft_round draft_ovr   pfr_id #>        <int>      <num>               <char>       <num>     <num>   <char> #>    1:   2000       2000        New York Jets           1        13 AbraJo00 #>    2:   2000       2000     Seattle Seahawks           1        19 AlexSh00 #>    3:   2000       2000   Kansas City Chiefs           6       188 AlfoDa20 #>    4:   2000         NA                 <NA>          NA        NA     <NA> #>    5:   2000       2000    Carolina Panthers           1        23 AndeRa21 #>   ---                                                                       #> 7676:   2022       2022    Green Bay Packers           1        28 WyatDe00 #> 7677:   2022         NA                 <NA>          NA        NA WydeJa00 #> 7678:   2022       2022     Cleveland Browns           4       124 YorkCa00 #> 7679:   2022         NA                 <NA>          NA        NA     <NA> #> 7680:   2022       2022 New England Patriots           4       137 ZappBa00 #>                  cfb_id      player_name    pos           school     ht    wt #>                  <char>           <char> <char>           <char> <char> <num> #>    1:              <NA>     John Abraham    OLB   South Carolina    6-4   252 #>    2: shaun-alexander-1  Shaun Alexander     RB          Alabama    6-0   218 #>    3:              <NA>   Darnell Alford     OT      Boston Col.    6-4   334 #>    4:              <NA>     Kyle Allamon     TE       Texas Tech    6-2   253 #>    5:              <NA> Rashard Anderson     CB    Jackson State    6-2   206 #>   ---                                                                         #> 7676:   devonte-wyatt-1    Devonte Wyatt     DT          Georgia    6-3   304 #> 7677: jalen-wydermyer-1  Jalen Wydermyer     TE        Texas A&M    6-4   255 #> 7678:       cade-york-1        Cade York      K              LSU    6-1   206 #> 7679:              <NA>      Nick Zakelj     OT          Fordham    6-6   316 #> 7680:    bailey-zappe-1     Bailey Zappe     QB Western Kentucky    6-1   215 #>       forty bench vertical broad_jump  cone shuttle #>       <num> <num>    <num>      <num> <num>   <num> #>    1:  4.55    NA       NA         NA    NA      NA #>    2:  4.58    NA       NA         NA    NA      NA #>    3:  5.56    23     25.0         94  8.48    4.98 #>    4:  4.97    NA     29.0        104  7.29    4.49 #>    5:  4.55    NA     34.0        123  7.18    4.15 #>   ---                                               #> 7676:  4.77    NA     29.0        111    NA      NA #> 7677:    NA    NA       NA         NA    NA      NA #> 7678:    NA    12       NA         NA    NA      NA #> 7679:  5.13    27     28.5        110  7.75    4.71 #> 7680:  4.88    NA     30.0        109  7.19    4.40 # }"},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"function gives quick overview versions R operating system well versions nflverse/ffverse packages, options, dependencies. primarily designed help get quick idea going helping someone else debug problem.","code":""},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"","code":"nflverse_sitrep(   pkg = c(\"nflreadr\", \"nflfastR\", \"nflseedR\", \"nfl4th\", \"nflplotR\", \"nflverse\"),   recursive = TRUE,   redact_path = TRUE )  ffverse_sitrep(   pkg = c(\"ffscrapr\", \"ffsimulator\", \"ffpros\", \"ffopportunity\"),   recursive = TRUE,   redact_path = TRUE )  .sitrep(   pkg,   recursive = TRUE,   redact_path = TRUE,   dev_repos = c(\"https://nflverse.r-universe.dev\", \"https://ffverse.r-universe.dev\") )"},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"pkg character vector naming installed packages, NULL (default) meaning nflverse packages. function checks internally packages installed informs case. recursive logical indicating whether dependencies pkg dependencies () included. Can also character vector listing types dependencies, subset c(\"Depends\", \"Imports\", \"LinkingTo\", \"Suggests\", \"Enhances\"). Character string \"\" shorthand vector, character string \"\" vector without \"Enhances\", character string \"strong\" (default) first three elements vector. redact_path logical indicating whether options contain \"path\" name redacted, default = TRUE dev_repos Developmental cran-like repos check, e.g. r-universe repos","code":""},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"","code":"# \\donttest{ try({ nflverse_sitrep() ffverse_sitrep() .sitrep(\"cachem\") }) #> ── System Info ───────────────────────────────────────────────────────────────── #> • R version 4.5.1 (2025-06-13) • Running under: Ubuntu 24.04.2 LTS #> ── Package Status ────────────────────────────────────────────────────────────── #>   package installed  cran  dev behind #> 1  cachem     1.1.0 1.1.0 <NA>        #> ── Package Options ───────────────────────────────────────────────────────────── #> • No options set for above packages #> ── Package Dependencies ──────────────────────────────────────────────────────── #> • fastmap (1.2.0)  • rlang (1.1.6)  • utils (4.5.1)   #> ──────────────────────────────────────────────────────────────────────────────── # }"},{"path":"https://nflreadr.nflverse.com/reference/stat_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical Mode — stat_mode","title":"Statistical Mode — stat_mode","text":"Computes statistical mode, .e. value appears often vector. Returns first match, TRUE multiple values.","code":""},{"path":"https://nflreadr.nflverse.com/reference/stat_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical Mode — stat_mode","text":"","code":"stat_mode(x, ..., na.rm = FALSE)"},{"path":"https://nflreadr.nflverse.com/reference/stat_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical Mode — stat_mode","text":"x vector data values. ... arguments, currently unused. na.rm logical evaluating TRUE FALSE indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://nflreadr.nflverse.com/reference/stat_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical Mode — stat_mode","text":"statistical mode type input vector x.","code":""},{"path":"https://nflreadr.nflverse.com/reference/stat_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical Mode — stat_mode","text":"","code":"vector_numeric <- sample(1:5, 15, TRUE) vector_numeric #>  [1] 3 1 2 1 4 1 4 1 2 2 4 2 4 5 3 stat_mode(vector_numeric) #> [1] 1  vector_character <- sample(LETTERS[1:5], 15, TRUE) vector_character #>  [1] \"D\" \"A\" \"E\" \"A\" \"E\" \"A\" \"A\" \"E\" \"B\" \"E\" \"C\" \"A\" \"D\" \"B\" \"A\" stat_mode(vector_character) #> [1] \"A\""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate team abbreviation mappings — team_abbr_mapping","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"named character vector mapping common alternate team abbreviations.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"","code":"team_abbr_mapping"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"named character vector name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"can suggest additions table opening issue nflreadr.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"","code":"# \\donttest{ team_abbr_mapping[c(\"STL\", \"OAK\",\"CRD\",\"BLT\", \"CLV\")] #>   STL   OAK   CRD   BLT   CLV  #>  \"LA\"  \"LV\" \"ARI\" \"BAL\" \"CLE\"  # }"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"named character vector mapping common alternate team abbreviations, follow relocations current city.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"","code":"team_abbr_mapping_norelocate"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"named character vector name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"can suggest additions table opening issue nflreadr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"","code":"# \\donttest{ team_abbr_mapping_norelocate[c(\"STL\", \"OAK\",\"CRD\",\"BLT\", \"CLV\")] #>   STL   OAK   CRD   BLT   CLV  #> \"STL\" \"OAK\" \"ARI\" \"BAL\" \"CLE\"  # }"},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-development-version","dir":"Changelog","previous_headings":"","what":"nflreadr (development version)","title":"nflreadr (development version)","text":"nflreadr now exports variable nflreadr::nflverse_data_timezone defines standard timezone across nflverse data. printing console, nflreadr convert timestamps user local timezone. Added several player name mappings (#249, #253, #255) Added dictionary describe shorthand roster status indicates (#232) clean_team_abbrs() now converts \"PHO\" \"ARI\". (#260) Improved description next score probability variables nflreadr::dictionary_pbp. (#262) .sitrep *_sitrep functions now redact nflfastR option paths. (#263) clean_team_abbrs() now converts full team names like \"Los Angeles Chargers\" team nicknames like \"Bills\" corresponding team abbreviations (\"LAC\" \"BUF\" example). (#269) load_players() now loads v2 nflverse players data. breaking change variables removed renamed. Please see data comparison details. get_current_week() now passes arguments most_recent_season(). (#272) load_depth_charts() now provides preseason depth charts, defaults most_recent_season(roster = TRUE), rather most_recent_season(roster = FALSE). Please note data structure changed data source changed. (#275, #277)","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-141","dir":"Changelog","previous_headings":"","what":"nflreadr 1.4.1","title":"nflreadr 1.4.1","text":"CRAN release: 2024-07-29 release covers number bugfixes function improvements: %c% internal helper now uses data.table::fifelse() avoid falsely converting dates integers. (#214) load_schedules() cleans roof variable order avoid nflverse model issues. (#218) join_coalesce() coerces x/y args data.frame return data.frame most_recent_season() now internally computes exact day season opener Thursday first Monday September. (#221) load_espn_qbr() longer supports argument league used allow loading College QBR (nflverse scope) (#222) New function stat_mode(), re-export nflfastR, computes statistical mode vector. (#224) load_ftn_charting() now accepts argument file_type. (#228) clean_team_abbrs() now accepts “team” name “NFL”. (#231) load_participation() now returns additional fields time_to_throw, was_pressure, defense_man_zone_type, defense_coverage_type (#233, thank @mistakia @john-b-edwards) clean_player_names() now can transliterate latin-ascii stringi package available, controlled convert_to_ascii argument. Thank : @arjunmenon10, @engineerchange, @isaactpetersen, @Jeffery-777, @john-b-edwards, @justlikekevin, @mrcaseb, @SCasanova, @tanho63 questions, feedback, contributions release.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-140","dir":"Changelog","previous_headings":"","what":"nflreadr 1.4.0","title":"nflreadr 1.4.0","text":"CRAN release: 2023-09-05 release addresses bugs, improves utilities, adds new datasets.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-datasets-1-4-0","dir":"Changelog","previous_headings":"","what":"New Datasets","title":"nflreadr 1.4.0","text":"load_player_stats(stat_type = \"defense\") added provide defensive player stats computed nflfastR::calculate_player_stats_def() (#200) also comes data dictionary, courtesy @mpcen (#192) load_ftn_charting() adds manual charting data 2022-onwards, graciously provided FTN Data. automatically updated published FTN, early indication within 48 hours game finished.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"function-improvements-1-4-0","dir":"Changelog","previous_headings":"","what":"Function Improvements","title":"nflreadr 1.4.0","text":"now returns list sitrep attributes rather printing console (programmatic use) now checks CRAN r-universe tell installation behind cran devel now handles dependencies nflverse/ffverse packages CRAN nflreadr::most_recent_season() aliases get_latest_season, get_current_season etc now use March 15th changeover league year. Hopefully moving target 🙃 nflreadr::clean_homeaway() now handles columns suffixes _home _away nflreadr::nflverse_game_id() now accepts old team abbreviations outputs useful errors. Added .for_cran() limit parallelization CRAN examples tests make_nflverse_data_class() now uses data.table::setattr() preserve data.table pointer","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"dictionary-updates-1-4-0","dir":"Changelog","previous_headings":"","what":"Dictionary updates","title":"nflreadr 1.4.0","text":"Clarified description \"special\" variable play--play data dictionary. (#189) Thank @ak47twq, @alecglen, @andycancapital, @bullaspc, @mcarman8, @mpcen, @mrcaseb, @tanho63, @tashapiro, @TheMathNinja questions, feedback, contributions release –","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-132","dir":"Changelog","previous_headings":"","what":"nflreadr 1.3.2","title":"nflreadr 1.3.2","text":"CRAN release: 2023-01-06 Minor changes per changelist patch CRAN-related example issue.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"changes-1-3-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"nflreadr 1.3.2","text":".clear_cache() now re-exported without dot prefix clear_cache(). Hopefully obvious. join_coalesce() now added utility join two dataframes coalesce shared columns. load_teams() now uses argument current (TRUE/FALSE) standardize rows returned - aligns nflreadr::clean_team_abbrs nflreadr::team_abbr_mapping dictionary_participation added (thank @josephhero!) clean_homeaway() now preserves neutral site location well input class input attributes load_ff_rankings() URL bug corrected (thank @kharigardner) test example clean_homeaway() resolved CRAN failure Thank @ak47twq, @bachlaw, @brunomioto, @guga31bb, @Josephhero, @kharigardner, @mrcaseb, @MysteryPollster, @numbersinfigures, @ohri questions, feedback, contributions towards release.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-131","dir":"Changelog","previous_headings":"","what":"nflreadr 1.3.1","title":"nflreadr 1.3.1","text":"CRAN release: 2022-09-25 Fixes CRAN bug provides function improvements, notably improved logic load_participation()’s pbp join.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-features-1-3-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"nflreadr 1.3.1","text":"Added nflverse_game_id() computes valid nflverse game identifiers format \"{season}_{week}_{away}_{home}\"","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"function-updates-1-3-1","dir":"Changelog","previous_headings":"","what":"Function Updates","title":"nflreadr 1.3.1","text":"load_participation() now joins pbp via nflverse_game_id instead old_game_id load_snap_counts() now allows download 2012 season previously hardcoded 2013 (#128) progressively() now works purrr-style lambda functions longer checks progressor class, allowing used flexibly (cli-based progress bars.)","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"bugfixes-1-3-1","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"nflreadr 1.3.1","text":"nflverse_releases() nflverse_download() now accept .token arguments default gh::gh_token(). mostly let us test things properly. (#131) Adjust import references per Jenny Bryan’s recommendations hadley/r-pkgs#828 avoid loading unused packages. clean_player_names() now fully lives nflreadr, squish/trim happens first player name mapping update get_current_season() now exists, can’t agree name things. Thank @atungate, @grayhawk40, @guga31bb,@jestarr, @john-b-edwards,@marvin3FF,@mrcaseb, @SCasanova, @shirondru, @tanho63, @TheMathNinja contributions feedback towards release!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-130","dir":"Changelog","previous_headings":"","what":"nflreadr 1.3.0","title":"nflreadr 1.3.0","text":"CRAN release: 2022-08-06 release introduces several new data functions, new utilities, array data/function updates.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-1-3-0","dir":"Changelog","previous_headings":"","what":"New Data!","title":"nflreadr 1.3.0","text":"load_participation() returns new play-level information players field, many players box, formation offense using. Data NGS starting 2016 onward load_contracts() downloads (historical) player contracts OverTheCap.com load_players() returns player-level information new recommended source (rosters) IDs, positions, birthdates etc. load_rosters_weekly() provides week--week team rosters dating back 2002. load_officials() returns game-level information officials assigned specific games.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-functions-1-3-0","dir":"Changelog","previous_headings":"","what":"New Functions!","title":"nflreadr 1.3.0","text":"nflverse_download() downloads files attached specified/releases local folder. facilitates something like arrow::open_dataset() reading files locally. nflverse_releases() lists releases can loaded nflverse_download() load_from_url() exposes new utility function loading csv, rds, qs, parquet URL memory.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"function-updates-1-3-0","dir":"Changelog","previous_headings":"","what":"Function Updates!","title":"nflreadr 1.3.0","text":"load_draft_picks() now rest career stat fields PFR *sitrep() functions now report package-specific options set. get_current_week() helper get current nfl season week load_rosters() now provides season-level rosters dating back 1920.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"other-bugfixes-1-3-0","dir":"Changelog","previous_headings":"","what":"Other bugfixes","title":"nflreadr 1.3.0","text":"moved rbindlist helper manages attributes better update dictionary_snap_counts dictionary_schedules missing fields rewrite from_url error messages use cli improve usefulness bump minimum rlang version 1.0.0 add piggyback suggested dependency Export old class support S4/DBI/nflfastR::update_db() tibble Fix exportOldClass supports data.frame stuff? idea,,, options(nflreadr.prefer) defaults rds now since qs longer required dependency clean_player_names() now also removes commas (optionally using convert_lastfirst) clean_player_names() now also removes caps suffixes dictionary updates: return labelled. .sitrep() exits nicely packages investigated. #114 refactored loaders use load_from_url primary fixed broken example load_ff_opportunity() documentation. #117 Thank @albtree, @john-b-edwards, @mrcaseb, @pranavrajaram, @tanho63, @tpenney89 contributions feedback release!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-120","dir":"Changelog","previous_headings":"","what":"nflreadr 1.2.0","title":"nflreadr 1.2.0","text":"CRAN release: 2022-03-17 release updates nflverse URLs use new nflverse-data repository releases, well provides improved pretty-printing methods tell data last updated.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-113","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.3","title":"nflreadr 1.1.3","text":"CRAN release: 2022-01-28 release adds functions arguments access new data, along backend changes.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-and-functions-1-1-3","dir":"Changelog","previous_headings":"","what":"New data and functions","title":"nflreadr 1.1.3","text":"load_ff_opportunity() downloads expected fantasy points data ffopportunity package load_ff_rankings() gains \"\" parameter return available rankings data (weekly archives since 2019) load_pfr_advstats() gains \"summary_level\" parameter return season-level data, fields available week-level.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"backend-1-1-3","dir":"Changelog","previous_headings":"","what":"Backend","title":"nflreadr 1.1.3","text":"options(nflreadr.verbose) replaces options(nflreadr.cache_warning) best way silence nflreadr messages. Improved data dictionaries ESPN QBR, Injuries, Trades, Depth Charts, Combine Exported most_recent_season() function Updated documentation improved linking file data issues. Sitrep functions ffopportunity nflverse packages. Pkgdown site upgraded Bootstrap 5. Thank @armstjc, @Grayhawk34, @john-b-edwards, @mrcaseb, @pranavrajaram, @rogers1000, @tanho63 contributions feedback release!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-112","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.2","title":"nflreadr 1.1.2","text":"CRAN release: 2021-12-08","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-functions-1-1-2","dir":"Changelog","previous_headings":"","what":"New Functions","title":"nflreadr 1.1.2","text":"nflverse_sitrep() ffverse_sitrep() give minimal overview package dependencies Minimum R version bumped R 3.6.0 - minimum version required read current RDS file-version. _sitrep() functions receive small print-related bugfix colouring improvement.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-111","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.1","title":"nflreadr 1.1.1","text":"CRAN release: 2021-10-05","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-and-functions-1-1-1","dir":"Changelog","previous_headings":"","what":"New Data and Functions","title":"nflreadr 1.1.1","text":"clean_player_names() clean_team_abbrs() added - help standardise player names team abbreviations based internal dictionaries. load_ff_rankings() now type argument can return \"draft\" \"week\" rankings DynastyProcess/data repo. clean_homeaway() converts dataframe games columns prefixed home_ away_ dataframe teams, renaming team_ opponent_ doubling rows. Added load_pfr_advstats() provides pass, rush, rec, def additional data week.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"nflreadr 1.1.1","text":"Add Rcpp RcppParallel minimum dependencies fix qs issues. Added message reminds user caching behavior. message displayed every 8 hours session interactive. Adjusted file location snap count data Thank @ajreinhard, @brunomioto, @jthomasmock, @mrcaseb, @SCasanova, @tanho63 feedback contributions package!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-110","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.0","title":"nflreadr 1.1.0","text":"CRAN release: 2021-09-02 release makes backend changes speed, reduced dependency footprint, ease maintenance.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-1-1-0","dir":"Changelog","previous_headings":"","what":"New Data","title":"nflreadr 1.1.0","text":"load_player_stats() can now retrieve weekly summaries kicking data specifying stat_type argument \"kicking\". load_combine() retrieves NFL combine data (PFR).","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"backend-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Backend Changes","title":"nflreadr 1.1.0","text":"Remove progress handling *_from_url() family functions move responsibility progressively() function decorator instead. See vignette details. Removed dependency dplyr purrr favour data.table - hopefully improves speed reduces dependency footprint. Uses rlang::arg_match0 instead match.arg (uses rlang explicitly instead implicitly dependency memoise).","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-100","dir":"Changelog","previous_headings":"","what":"nflreadr 1.0.0","title":"nflreadr 1.0.0","text":"CRAN release: 2021-08-09 goal {nflreadr} efficiently load data nflverse GitHub repositories, features caching, optional progress updates, data dictionaries. time, includes data following repositories: nflverse/nflverse-pbp nflverse/nfldata nflverse/nflverse-rosters nflverse/espnscrapeR-data nflverse/nflverse-pfr dynastyprocess/data hopefully provide unified reliable package downloading nflverse data can extended rest nflverse ffverse package families. Special thanks Seb, Ben, John, Lee, Thomas contributions package data pipelines package relies 🎉","code":""}]
